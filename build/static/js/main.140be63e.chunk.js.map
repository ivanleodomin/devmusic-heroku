{"version":3,"sources":["components/AddAdminUsers.jsx","components/AddCategory.jsx","components/ListCategories.jsx","components/EditCategory.jsx","state/productsReducer.js","components/ProductsList.jsx","components/EditProductForm.jsx","components/Banner.jsx","components/Footer.jsx","components/Checkout.jsx","components/Orders.jsx","components/Card.jsx","components/Home.jsx","components/CategoryGrid.jsx","state/userReducer.js","components/LoginForm.jsx","components/RegisterForm.jsx","components/AddProductForm.jsx","components/Cart.jsx","components/DevCard.jsx","components/DevsPage.jsx","components/SingleComment.jsx","components/CommentSection.jsx","components/CardProduct.jsx","components/Search.jsx","view/Navbar/ButtonCategory.jsx","view/Navbar/SearchInput.jsx","view/Navbar/AccountButtons.jsx","view/Navbar/MobileNav.jsx","view/Navbar/DesktopNav.jsx","view/Navbar/NavbarResponsive.jsx","App.jsx","state/store.js","index.js"],"names":["Component","useState","users","setUsers","toast","useToast","useEffect","axios","get","then","resp","data","w","bg","p","alignItems","justifyContent","direction","base","shadow","md","spacingY","columns","py","px","fontWeight","span","textOverflow","overflow","whiteSpace","map","user","uid","id","userName","isAdmin","justify","variant","colorScheme","size","onClick","put","title","description","status","duration","isClosable","AddCategory","history","useHistory","name","setName","onSubmit","e","preventDefault","post","push","minH","align","useColorModeValue","spacing","mx","maxW","fontSize","rounded","boxShadow","placeholder","type","value","onChange","target","color","categories","setCategories","to","mr","category","cid","delete","SimpleCard","useParams","edit","setEdit","setCategory","getProducts","createAsyncThunk","res","setProducts","createAction","productsReducer","createReducer","state","action","payload","fulfilled","ProductsList","products","useSelector","dispatch","useDispatch","ml","product","pid","borderBottom","model","price","EditProductForm","setModel","photo","setPhoto","stock","setStock","setPrice","setDescription","categoryName","handleChange","setValue","visibility","sm","borderTop","borderTopColor","mt","display","colSpan","lineHeight","as","GridItem","htmlFor","focusBorderColor","rows","textAlign","_focus","slides","img","currentSlide","setCurrentSlide","slidesCount","length","carouselStyle","transition","automatedSlide","setInterval","toLowerCase","s","clearInterval","objectFit","borderRadius","m","pos","h","slide","sid","flex","boxSize","top","src","backgroundSize","Gslr","className","bottom","borderTopWidth","borderStyle","borderColor","marginTop","float","alt","Checkout","mb","_after","opacity","left","right","zIndex","content","lg","h1","fit","loading","Orders","useDisclosure","isOpen","onOpen","onClose","orders","setOrders","ordenes","orden","buyOrderId","order","total","element","Card","useBreakpointValue","position","height","width","isFullWidth","breakPoints","itemsToShow","itemsToScroll","ProductsGrid","React","cuerda","setCuerda","viento","setViento","percusion","setPercusion","fontFamily","marginBottom","i","CategoryGrid","page","parseInt","productsCat","setProductsCat","next","setNext","window","scrollTo","behavior","productos","instrument","my","loginRequest","logoutRequest","setUser","userReducer","LoginForm","email","setEmail","password","setPassword","useForm","handleSubmit","register","errors","formState","error","isInvalid","isRequired","required","pattern","message","minLength","_hover","border","leftIcon","RegisterForm","setUserName","tel","setTel","valNum","test","AddProductForm","setname","autoComplete","cat","reduce","acum","cantidad","isDisabled","hanlderAppend","idProduct","handlerSubstract","DevsPage","objectPosition","MdHeadset","BsFillBriefcaseFill","job","MdLocationOn","country","MdEmail","DevCard","SingleComment","comment","ChatIcon","d","Array","fill","_","puntuacion","borderWidth","CommentSection","getcomments","setGetComments","setPuntuacion","setContent","userId","setUserId","buyConditions","setBuyConditions","actualize","setActualize","comments","comento","forEach","Color","CardProduct","setProduct","valoration","setValoration","minChildWidth","h2","href","Search","ButtonCategory","categorias","setCategorias","Button","rightIcon","categoria","SearchInput","movile","search","setSearch","AccountButtons","handleLogout","isSuperAdmin","icon","MobileNav","DesktopNav","WithSubnavigation","onToggle","in","animateOpacity","App","catch","err","console","log","exact","path","Banner","Home","store","configureStore","middleware","getDefaultMiddleware","concat","logger","reducer","app","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.140be63e.chunk.js","sourcesContent":["import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  chakra,\n  Flex,\n  Button,\n  Stack,\n  SimpleGrid,\n  useToast,\n} from \"@chakra-ui/react\";\n\nexport default function Component() {\n  const [users, setUsers] = useState([]);\n  const toast = useToast();\n  useEffect(() => {\n    axios\n      .get(`/api/admin/users`)\n      .then((resp) => {\n        return resp.data;\n      })\n      .then((data) => {\n        setUsers(data);\n      });\n  }, []);\n\n  return (\n    <Flex\n      w=\"full\"\n      bg=\"white\"\n      p={50}\n      alignItems=\"center\"\n      justifyContent=\"center\"\n    >\n      {/* encabezado */}\n      <Stack direction={{ base: \"column\" }} w=\"full\" bg=\"white\" shadow=\"lg\">\n        <Flex direction={{ base: \"row\", md: \"column\" }} bg=\"grey\">\n          <SimpleGrid\n            spacingY={3}\n            columns={{ base: 1, md: 4 }}\n            w=\"full\"\n            py={2}\n            px={10}\n            fontWeight=\"hairline\"\n          >\n            <span>ID</span>\n            <chakra.span\n              textOverflow=\"ellipsis\"\n              overflow=\"hidden\"\n              whiteSpace=\"nowrap\"\n            >\n              Name\n            </chakra.span>\n            <chakra.span\n              textOverflow=\"ellipsis\"\n              overflow=\"hidden\"\n              whiteSpace=\"nowrap\"\n            >\n              Is Admin\n            </chakra.span>\n          </SimpleGrid>\n        </Flex>\n\n        {/* Filas a mapear */}\n        {users.map((user, uid) => {\n          return (\n            <Flex\n              direction={{ base: \"row\", md: \"column\" }}\n              bg=\"white\"\n              key={uid}\n            >\n              <SimpleGrid\n                spacingY={3}\n                columns={{ base: 1, md: 4 }}\n                w=\"full\"\n                py={2}\n                px={10}\n                fontWeight=\"hairline\"\n              >\n                <span>{user.id}</span>\n\n                <chakra.span\n                  textOverflow=\"ellipsis\"\n                  overflow=\"hidden\"\n                  whiteSpace=\"nowrap\"\n                >\n                  {user.userName}\n                </chakra.span>\n\n                <chakra.span\n                  textOverflow=\"ellipsis\"\n                  overflow=\"hidden\"\n                  whiteSpace=\"nowrap\"\n                >\n                  {user.isAdmin ? <p>Yes</p> : <p>No</p>}\n                </chakra.span>\n\n                <Flex justify={{ md: \"end\" }}>\n                  <Button\n                    variant=\"solid\"\n                    colorScheme=\"green\"\n                    size=\"sm\"\n                    onClick={() => {\n                      if (user.isAdmin) {\n                        return axios\n                          .put(`/api/admin/users/${user.id}`, {\n                            isAdmin: false,\n                          })\n                          .then((resp) =>\n                            axios\n                              .get(`/api/admin/users`)\n                              .then((resp) => {\n                                toast({\n                                  title: \"Change Success\",\n                                  description: \"User degraded\",\n                                  status: \"error\",\n                                  duration: 2000,\n                                  isClosable: true,\n                                });\n                                return resp.data;\n                              })\n                              .then((data) => {\n                                setUsers(data);\n                              })\n                          );\n                      } else {\n                        return axios\n                          .put(`/api/admin/users/${user.id}`, {\n                            isAdmin: true,\n                          })\n                          .then((resp) =>\n                            axios\n                              .get(`/api/admin/users`)\n                              .then((resp) => {\n                                toast({\n                                  title: \"Change Success\",\n                                  description: \"User Promoted\",\n                                  status: \"success\",\n                                  duration: 2000,\n                                  isClosable: true,\n                                });\n                                return resp.data;\n                              })\n                              .then((data) => {\n                                setUsers(data);\n                              })\n                          );\n                      }\n                    }}\n                  >\n                    Set Admin\n                  </Button>\n                </Flex>\n              </SimpleGrid>\n            </Flex>\n          );\n        })}\n      </Stack>\n    </Flex>\n  );\n}\n","import {\n  Flex,\n  Box,\n  FormLabel,\n  Input,\n  Stack,\n  Button,\n  Heading,\n  useColorModeValue,\n  useToast\n} from \"@chakra-ui/react\";\n\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router\";\n\nexport default function AddCategory() {\n    const toast = useToast();\n\n  const history = useHistory();\n  const [name, setName] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    axios.post(`/api/admin/category/`, { name })\n    .then((resp) => {\n        toast({\n            title: \"Action Success.\",\n            description: \"Category created.\",\n            status: \"success\",\n            duration: 2000,\n            isClosable: true,\n          })\n        return resp.data})\n    history.push(\"/admin/categories\")\n};\n\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Flex\n        minH={\"100vh\"}\n        align={\"center\"}\n        justify={\"center\"}\n        bg={useColorModeValue(\"gray.50\", \"gray.800\")}\n      >\n        <Stack spacing={8} mx={\"auto\"} maxW={\"lg\"} py={12} px={6}>\n          <Stack align={\"center\"}>\n            <Heading fontSize={\"4xl\"}>Add category</Heading>\n          </Stack>\n          <Box\n            rounded={\"lg\"}\n            bg={useColorModeValue(\"white\", \"gray.700\")}\n            boxShadow={\"lg\"}\n            p={8}\n          >\n            <Stack spacing={4}>\n              <FormLabel>Please create a new category:</FormLabel>\n              <Input\n                placeholder=\"Set new category...\"\n                type=\"text\"\n                value={name}\n                onChange={(e) => {\n                  setName(e.target.value);\n                }}\n              />\n\n              <Stack spacing={10}>\n                <Button\n                  type=\"submit\"\n                  colorScheme={\"pink\"}\n                  variant=\"solid\"\n                  color={\"white\"}\n                >\n                  Create Category\n                </Button>\n              </Stack>\n            </Stack>\n          </Box>\n        </Stack>\n      </Flex>\n    </form>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { GrEdit } from \"react-icons/gr\";\nimport { AiFillDelete } from \"react-icons/ai\";\nimport {\n  chakra,\n  Flex,\n  Button,\n  Stack,\n  SimpleGrid,\n  useToast,\n} from \"@chakra-ui/react\";\n\nexport default function Component() {\n  const [categories, setCategories] = useState([]);\n  const toast = useToast();\n\n  useEffect(() => {\n    axios\n      .get(`/api/products/category`)\n      .then((resp) => {\n        return resp.data;\n      })\n      .then((data) => {\n        setCategories(data);\n      });\n  }, []);\n\n  return (\n    <Flex\n      w=\"full\"\n      bg=\"white\"\n      p={50}\n      alignItems=\"center\"\n      justifyContent=\"center\"\n    >\n      {/* encabezado */}\n      <Stack direction={{ base: \"column\" }} w=\"full\" bg=\"white\" shadow=\"lg\">\n        <Flex direction={{ base: \"row\", md: \"column\" }} bg=\"grey\">\n          <SimpleGrid\n            spacingY={3}\n            columns={{ base: 1, md: 4 }}\n            w=\"full\"\n            py={2}\n            px={10}\n            fontWeight=\"hairline\"\n          >\n            <span>Cat.ID</span>\n            <chakra.span\n              textOverflow=\"ellipsis\"\n              overflow=\"hidden\"\n              whiteSpace=\"nowrap\"\n            >\n              Category\n            </chakra.span>\n            <span></span>\n            <Link to=\"/admin/add/category\">\n              <Button bg=\"black\" color=\"#ffcd1f\" mr={15}>\n                Add New Category\n              </Button>\n            </Link>\n          </SimpleGrid>\n        </Flex>\n\n        {/* Filas a mapear */}\n        {categories.map((category, cid) => {\n          return (\n            <Flex\n              direction={{ base: \"row\", md: \"column\" }}\n              bg=\"white\"\n              key={cid}\n            >\n              <SimpleGrid\n                spacingY={3}\n                columns={{ base: 1, md: 4 }}\n                w=\"full\"\n                py={2}\n                px={10}\n                fontWeight=\"hairline\"\n              >\n                <span>{category.id}</span>\n\n                <chakra.span\n                  textOverflow=\"ellipsis\"\n                  overflow=\"hidden\"\n                  whiteSpace=\"nowrap\"\n                >\n                  {category.name}\n                </chakra.span>\n\n                <Flex justify={{ md: \"end\" }}>\n                  <Link to={`/admin/category/${category.id}`}>\n                    <Button variant=\"outline\" bg=\"gray.400\" size=\"sm\">\n                      <GrEdit />\n                    </Button>\n                  </Link>\n                </Flex>\n                <Flex>\n                  <Button\n                    variant=\"solid\"\n                    colorScheme=\"red\"\n                    size=\"sm\"\n                    onClick={() => {\n                      return axios\n                        .delete(`/api/admin/category/${category.id}`)\n                        .then((resp) => resp.data)\n                        .then(() => {\n                          axios\n                            .get(`/api/products/category`)\n                            .then((resp) => {\n                              toast({\n                                title: \"Action Success\",\n                                description: \"Category Deleted\",\n                                status: \"error\",\n                                duration: 2000,\n                                isClosable: true,\n                              });\n                              return resp.data;\n                            })\n                            .then((data) => {\n                              setCategories(data);\n                            });\n                        });\n                    }}\n                  >\n                    <AiFillDelete />\n                  </Button>\n                \n                </Flex>\n              </SimpleGrid>\n            </Flex>\n          );\n        })}\n      </Stack>\n    </Flex>\n  );\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport {\n    Flex,\n    Box,\n    FormLabel,\n    Input,\n    Stack,\n    Button,\n    Heading,\n    useColorModeValue,\n    useToast\n  } from \"@chakra-ui/react\";\n  \n  import { useParams } from \"react-router-dom\";\n  import { useState, useEffect } from \"react\";\n  import axios from \"axios\";\n  import { useHistory } from \"react-router\";\n  \n  export default function SimpleCard() {\n    const toast= useToast();\n    const { id } = useParams();\n    const [edit, setEdit] = useState(\"\");\n    const [category, setCategory] = useState({});\n    const history = useHistory();\n  \n    useEffect(() => {\n      axios\n        .get(`/api/admin/category/${id}`)\n        .then((resp) => setCategory(resp.data));\n    }, []);\n  \n    const handleSubmit = (e) => {\n      e.preventDefault();\n      axios\n        .put(`/api/admin/category/${id}`, { name: edit })\n        .then((resp) => {\n          toast({\n            title: \"Action Success\",\n            description: \"Category edited\",\n            status: \"success\",\n            duration: 2000,\n            isClosable: true,\n          })\n          return resp.data})\n        history.push(\"/admin/categories\")\n    };\n  \n    return (\n      <form onSubmit={handleSubmit}>\n        <Flex\n          minH={\"100vh\"}\n          align={\"center\"}\n          justify={\"center\"}\n          bg={useColorModeValue(\"gray.50\", \"gray.800\")}\n        >\n          <Stack spacing={8} mx={\"auto\"} maxW={\"lg\"} py={12} px={6}>\n            <Stack align={\"center\"}>\n              <Heading fontSize={\"4xl\"}>Edit category</Heading>\n            </Stack>\n            <Box\n              rounded={\"lg\"}\n              bg={useColorModeValue(\"white\", \"gray.700\")}\n              boxShadow={\"lg\"}\n              p={8}\n            >\n              <Stack spacing={4}>\n                <FormLabel>Current category: {category.name}</FormLabel>\n                <Input\n                  placeholder=\"Set new category...\"\n                  type=\"text\"\n                  value={edit}\n                  onChange={(e) => {\n                    setEdit(e.target.value);\n                  }}\n                />\n  \n                <Stack spacing={10} >\n                  <Button\n                    type=\"submit\"\n                    colorScheme={\"pink\"}\n                    variant=\"solid\"\n                    color={\"white\"}\n                  >\n                    Set category\n                  </Button>\n                </Stack>\n               \n              </Stack>\n            </Box>\n          </Stack>\n        </Flex>\n      </form>\n    );\n  }","import {\n  createAction,\n  createReducer,\n  createAsyncThunk,\n} from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nexport const getProducts = createAsyncThunk(\"GET_PRODUCTS\", () => {\n  return axios.get(\"/api/products\").then((res) => {\n    return res.data;\n  });\n});\n\nexport const setProducts = createAction(\"SET_PRODUCTS\");\n\nconst productsReducer = createReducer([], {\n  [setProducts]: (state, action) => (state = action.payload),\n  [getProducts.fulfilled]: (state, action) => (state = action.payload),\n});\n\nexport default productsReducer;\n","import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport {\n  chakra,\n  Flex,\n  Button,\n  Stack,\n  SimpleGrid,\n  useToast\n} from \"@chakra-ui/react\";\nimport {GrEdit} from 'react-icons/gr'\nimport {AiFillDelete} from 'react-icons/ai'\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getProducts } from \"../state/productsReducer\";\n\nexport default function ProductsList() {\n  const products = useSelector((state) => state.products);\n  const toast= useToast();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getProducts());\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <Flex\n      w=\"full\"\n      bg=\"white\"\n      p={50}\n      alignItems=\"center\"\n      justifyContent=\"center\"\n    >\n      <Stack direction={{ base: \"column\" }} w=\"full\" bg=\"white\" shadow=\"lg\">\n        <Flex direction={{ base: \"row\", md: \"column\" }} bg=\"#e6e6e6\">\n          <SimpleGrid\n            spacingY={3}\n            columns={{ base: 1, md: 4 }}\n            w=\"full\"\n            py={2}\n            px={10}\n            fontWeight=\"hairline\"\n          >\n            <span>Name</span>\n            <chakra.span\n              textOverflow=\"ellipsis\"\n              overflow=\"hidden\"\n              whiteSpace=\"nowrap\"\n            >\n              Model\n            </chakra.span>\n            <chakra.span\n              textOverflow=\"ellipsis\"\n              overflow=\"hidden\"\n              whiteSpace=\"nowrap\"\n            >\n              Price\n            </chakra.span>\n            <Link to=\"/admin\">\n            <Button\n            bg=\"black\"\n            color=\"#ffcd1f\"\n            ml={20}>Add New Product</Button>\n            </Link>\n          </SimpleGrid>\n        </Flex>\n        {products.map((product, pid) => {\n          return (\n            <Flex\n              direction={{ base: \"row\", md: \"column\" }}\n              bg=\"white\"\n              key={pid}\n              borderBottom=\"1px solid grey\"\n            >\n              <SimpleGrid\n                spacingY={3}\n                columns={{ base: 1, md: 4 }}\n                w=\"full\"\n                py={2}\n                px={10}\n                fontWeight=\"hairline\"\n              >\n                <span>{product.name}</span>\n                <span>{product.model}</span>\n\n                <chakra.span\n                  textOverflow=\"ellipsis\"\n                  overflow=\"hidden\"\n                  whiteSpace=\"nowrap\"\n                >\n                  {product.price}\n                </chakra.span>\n\n                <Flex justify={{ md: \"end\" }}>\n                  <Button\n                    variant=\"solid\"\n                    colorScheme=\"red\"\n                    size=\"sm\"\n                    mr={2}\n                    onClick={() => {\n                      return axios\n                        .delete(`/api/admin/product/${product.id}`)\n                        .then((resp) => {\n                          toast({\n                            title: \"Delete Success\",\n                            description: \"Product Deleted\",\n                            status: \"error\",\n                            duration: 2000,\n                            isClosable: true,\n                          })\n                          return resp.data})\n                        .then(() => dispatch(getProducts()));\n                    }}\n                  >\n                     <AiFillDelete/>\n                  </Button>\n                  <Link to={`/admin/edit/${product.id}`}>\n                  <Button  variant=\"outline\"\n                        bg=\"gray.400\"\n                        size=\"sm\"\n                        mr={10}>\n                  <GrEdit/>\n                  </Button>\n                  </Link>\n                </Flex>\n              </SimpleGrid>\n            </Flex>\n          );\n        })}\n\n        <Stack\n          direction={{ base: \"column\" }}\n          w=\"full\"\n          bg=\"gray.800\"\n          shadow=\"lg\"\n        >\n          <Flex direction={{ base: \"row\", md: \"column\" }} bg=\"grey\">\n            <SimpleGrid\n              spacingY={3}\n              columns={{ base: 1, md: 4 }}\n              w=\"full\"\n              py={2}\n              px={10}\n              fontWeight=\"hairline\"\n            ></SimpleGrid>\n          </Flex>\n        </Stack>\n      </Stack>\n    </Flex>\n  );\n}","/* eslint-disable react-hooks/exhaustive-deps */\nimport { React, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useParams } from \"react-router-dom\";\nimport { useHistory } from \"react-router\";\n\nimport {\n  Box,\n  useColorModeValue,\n  SimpleGrid,\n  GridItem,\n  Heading,\n  Text,\n  Stack,\n  FormControl,\n  FormLabel,\n  Input,\n  Textarea,\n  Button,\n  useToast\n} from \"@chakra-ui/react\";\n\nexport default function EditProductForm() {\n  const toast= useToast();\n  const history = useHistory();\n  const { id } = useParams();\n  const [name, setName] = useState(\"\");\n  const [model, setModel] = useState(\"\");\n  const [photo, setPhoto] = useState(\"\");\n  const [stock, setStock] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n\n  useEffect(() => {\n    axios.get(`/api/products/id/${id}`).then(({ data }) => {\n      setName(data.product.name);\n      setModel(data.product.model);\n      setPhoto(data.product.photo);\n      setStock(data.product.stock);\n      setPrice(data.product.price);\n      setDescription(data.product.description);\n      setCategory(data.categoryName?.name);\n    });\n  }, []);\n  \n  const handleChange = (e, setValue) => {\n    setValue(e.target.value);\n  };\n  const handleSubmit = () => {\n    axios\n      .put(`/api/admin/product/${id}`, {\n        name: name,\n        model: model,\n        photo: photo,\n        stock: stock,\n        price: price,\n        description: description,\n        category: category,\n      })\n      .then((resp) => {\n        toast({\n          title: \"Edit Success\",\n          description: \"Product edited\",\n          status: \"success\",\n          duration: 2000,\n          isClosable: true,\n        })\n        return resp.data})\n        history.push(\"/admin/productslist\")\n\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Box bg={useColorModeValue(\"gray.50\", \"inherit\")} p={10}>\n        <Box visibility={{ base: \"hidden\", sm: \"visible\" }} aria-hidden=\"true\">\n          <Box py={5}>\n            <Box\n              borderTop=\"solid 1px\"\n              borderTopColor={useColorModeValue(\"gray.200\", \"whiteAlpha.200\")}\n            ></Box>\n          </Box>\n        </Box>\n\n        <Box mt={[10, 0]}>\n          <SimpleGrid\n            display={{ base: \"initial\", md: \"grid\" }}\n            columns={{ md: 3 }}\n            spacing={{ md: 6 }}\n          >\n            <GridItem colSpan={{ md: 1 }}>\n              <Box px={[4, 0]}>\n                <Heading fontSize=\"lg\" fontWeight=\"medium\" lineHeight=\"6\">\n                  Edit a product\n                </Heading>\n                <Text\n                  mt={1}\n                  fontSize=\"sm\"\n                  color={useColorModeValue(\"gray.600\", \"gray.400\")}\n                >\n                  Use a permanent address where you can receive mail.\n                </Text>\n              </Box>\n            </GridItem>\n            <GridItem mt={[5, null, 0]} colSpan={{ md: 2 }}>\n              <Stack\n                px={4}\n                py={5}\n                p={[null, 6]}\n                bg={useColorModeValue(\"white\", \"gray.700\")}\n                spacing={6}\n              >\n                <SimpleGrid columns={6} spacing={6}>\n                  <FormControl as={GridItem} colSpan={[6, 3]}  >\n                    <FormLabel\n                      htmlFor=\"first_name\"\n                      fontSize=\"sm\"\n                      fontWeight=\"md\"\n                      color={useColorModeValue(\"gray.700\", \"gray.50\")}\n                    >\n                      Name\n                    </FormLabel>\n                    <Input\n                      type=\"text\"\n                      mt={1}\n                      focusBorderColor=\"brand.400\"\n                      shadow=\"sm\"\n                      size=\"sm\"\n                      w=\"full\"\n                      rounded=\"md\"\n                      value={name}\n                      onChange={(e) => handleChange(e, setName)}\n                    />\n                  </FormControl>\n\n                  <FormControl as={GridItem} colSpan={[6, 3]}  >\n                    <FormLabel\n                      htmlFor=\"last_name\"\n                      fontSize=\"sm\"\n                      fontWeight=\"md\"\n                      color={useColorModeValue(\"gray.700\", \"gray.50\")}\n                    >\n                      Model\n                    </FormLabel>\n                    <Input\n                      type=\"text\"\n                      mt={1}\n                      focusBorderColor=\"brand.400\"\n                      shadow=\"sm\"\n                      size=\"sm\"\n                      w=\"full\"\n                      rounded=\"md\"\n                      value={model}\n                      onChange={(e) => handleChange(e, setModel)}\n                    />\n                  </FormControl>\n                  <FormControl as={GridItem} colSpan={[6, 3]}  >\n                    <FormLabel\n                      fontSize=\"sm\"\n                      fontWeight=\"md\"\n                      color={useColorModeValue(\"gray.700\", \"gray.50\")}\n                    >\n                      Stock\n                    </FormLabel>\n                    <Input\n                      type=\"number\"\n                      mt={1}\n                      focusBorderColor=\"brand.400\"\n                      shadow=\"sm\"\n                      size=\"sm\"\n                      w=\"full\"\n                      rounded=\"md\"\n                      value={stock}\n                      onChange={(e) => handleChange(e, setStock)}\n                    />\n                  </FormControl>\n\n                  <FormControl as={GridItem} colSpan={[6, 3]}  >\n                    <FormLabel\n                      fontSize=\"sm\"\n                      fontWeight=\"md\"\n                      color={useColorModeValue(\"gray.700\", \"gray.50\")}\n                    >\n                      Price\n                    </FormLabel>\n                    <Input\n                      type=\"number\"\n                      mt={1}\n                      focusBorderColor=\"brand.400\"\n                      shadow=\"sm\"\n                      size=\"sm\"\n                      w=\"full\"\n                      rounded=\"md\"\n                      value={price}\n                      onChange={(e) => handleChange(e, setPrice)}\n                    />\n                  </FormControl>\n\n                  <FormControl as={GridItem} colSpan={6}  >\n                    <FormLabel\n                      fontSize=\"sm\"\n                      fontWeight=\"md\"\n                      color={useColorModeValue(\"gray.700\", \"gray.50\")}\n                    >\n                      Photo Url\n                    </FormLabel>\n                    <Input\n                      type=\"text\"\n                      mt={1}\n                      focusBorderColor=\"brand.400\"\n                      shadow=\"sm\"\n                      size=\"sm\"\n                      w=\"full\"\n                      rounded=\"md\"\n                      value={photo}\n                      onChange={(e) => handleChange(e, setPhoto)}\n                    />\n                  </FormControl>\n\n                  <FormControl as={GridItem} colSpan={[6, 6, null, 2]}>\n                    <div>\n                      <FormControl id=\"email\" mt={1}  >\n                        <FormLabel\n                          fontSize=\"sm\"\n                          fontWeight=\"md\"\n                          color={useColorModeValue(\"gray.700\", \"gray.50\")}\n                        >\n                          Description\n                        </FormLabel>\n                        <Textarea\n                          placeholder=\"Add a description.\"\n                          mt={1}\n                          rows={3}\n                          shadow=\"sm\"\n                          focusBorderColor=\"brand.400\"\n                          fontSize={{ sm: \"sm\" }}\n                          value={description}\n                          onChange={(e) => handleChange(e, setDescription)}\n                        />\n                      </FormControl>\n                    </div>\n                  </FormControl>\n\n                  <FormControl as={GridItem} colSpan={[6, 6, null, 2]}>\n                    <div>\n                      <FormControl mt={1}  >\n                        <FormLabel\n                          fontSize=\"sm\"\n                          fontWeight=\"md\"\n                          color={useColorModeValue(\"gray.700\", \"gray.50\")}\n                        >\n                          Category\n                        </FormLabel>\n                        <Input\n                          type=\"text\"\n                          mt={1}\n                          focusBorderColor=\"brand.400\"\n                          shadow=\"sm\"\n                          size=\"sm\"\n                          w=\"full\"\n                          rounded=\"md\"\n                          value={category}\n                          onChange={(e) => handleChange(e, setCategory)}\n                        />\n                      </FormControl>\n                    </div>\n                  </FormControl>\n                </SimpleGrid>\n              </Stack>\n              <Box\n                px={{ base: 4, sm: 6 }}\n                py={3}\n                bg={useColorModeValue(\"gray.50\", \"gray.900\")}\n                textAlign=\"right\"\n              >\n                {/* <Link to={\"/admin/productslist\"}> */}\n                <Button\n                  type=\"submit\"\n                  colorScheme=\"blue\"\n                  _focus={{ shadow: \"\" }}\n                  fontWeight=\"md\"\n                >\n                  Save\n                </Button>\n                {/* </Link> */}\n              </Box>\n            </GridItem>\n          </SimpleGrid>\n        </Box>\n      </Box>\n    </form>\n  );\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useState } from \"react\";\nimport { Text, Box, Flex, useColorModeValue, Image } from \"@chakra-ui/react\";\n\n\nconst Component = () => {\n  const slides = [\n    {\n      img:\n        \"https://images.unsplash.com/photo-1626126525134-fbbc07afb32c?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1170&q=80\",\n    },\n    {\n      img:\n      \"https://images.unsplash.com/photo-1544140119-e0ad950faf9e?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1632&q=80\",\n    },\n    {\n      img:\n        \"https://images.unsplash.com/photo-1585666176485-dfba5b1944f0?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1170&q=80\",\n    }\n  ];\n  const [currentSlide, setCurrentSlide] = useState(0);\n\n  const slidesCount = slides.length;\n\n  const prevSlide = () => {\n    setCurrentSlide((s) => (s === 0 ? slidesCount - 1 : s - 1));\n  };\n  const nextSlide = () => {\n    setCurrentSlide((s) => (s === slidesCount - 1 ? 0 : s + 1));\n  };\n  const carouselStyle = {\n    transition: \"all .5s\",\n    ml: `-${currentSlide * 100}%`,\n  };\n\n  const SLIDES_INTERVAL_TIME = 3000;\n  const ANIMATION_DIRECTION = \"right\";\n\n  useEffect(() => {\n    const automatedSlide = setInterval(() => {\n      ANIMATION_DIRECTION.toLowerCase() === \"left\" ? prevSlide() : nextSlide();\n    }, SLIDES_INTERVAL_TIME);\n    return () => clearInterval(automatedSlide);\n  }, []);\n\n  return (\n    \n    <Flex\n      w=\"full\"\n      bg={useColorModeValue(\"#e6e6e6\", \"gray.600\")}\n      p={10}\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      objectFit=\"contain\"\n      borderRadius=\"md\"\n      m={2}\n      boxShadow=\"md\"\n    >\n    \n      <Flex w=\"full\" overflow=\"hidden\">\n        <Flex pos=\"relative\" h=\"400px\" w=\"full\" {...carouselStyle}>\n          {slides.map((slide, sid) => (\n            <Box key={`slide-${sid}`} flex=\"none\" boxSize=\"full\" shadow=\"md\">\n              <Text\n                color=\"white\"\n                fontSize=\"xs\"\n                p=\"8px 12px\"\n                pos=\"absolute\"\n                top=\"0\"\n                whiteSpace=\"nowrap\"\n              >\n                {sid + 1} / {slidesCount}\n              </Text>\n              <Image src={slide.img} boxSize=\"full\" backgroundSize=\"cover\" objectFit=\"cover\"/>\n            </Box>\n          ))}\n        </Flex>\n      </Flex>\n    </Flex>\n  );\n};\nexport default Component;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Box,\n  useColorModeValue,\n  Stack,\n  Text,\n} from \"@chakra-ui/react\";\n\nexport default function Gslr() {\n  return (\n    <Box\n      h={20}\n      className=\"footer\"\n      bottom={\"0\"}\n      w=\"100%\"\n      borderTopWidth={1}\n      borderStyle={\"solid\"}\n      borderColor={useColorModeValue(\"gray.200\", \"gray.700\")}\n      bg=\"black\"\n    >\n      <Stack>\n        <Stack\n          marginTop={5}\n          direction=\"row\"\n          spacing=\"4\"\n          align=\"center\"\n          justify=\"space-between\"\n        >\n          <Text mr={5} ml={5} color=\"white\">© 2021 devMusic. All rights reserved</Text>\n          <Stack direction={\"row\"} spacing={6}>\n            <Link to=\"/devs-page\">\n              <Box overflow=\"auto\" float=\"left\" w=\"150px\" h=\"full\" mr={5}>\n                <img\n                  src=\"https://cdn.discordapp.com/attachments/911052852607193099/911053682928406588/devMusic_1.jpg\"\n                  alt=\"logo\"\n                />\n              </Box>\n            </Link>\n          </Stack>\n        </Stack>\n      </Stack>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  chakra,\n  Box,\n  useColorModeValue,\n  Flex,\n  Badge,\n  SimpleGrid,\n  Button,\n  Image,\n} from \"@chakra-ui/react\";\nimport { ImMusic } from \"react-icons/im\";\n\nconst Checkout = () => {\n  return (\n    <SimpleGrid\n      mb={100}\n      columns={{ base: 1, md: 2 }}\n      spacing={0}\n      _after={{\n        bg: \"brand.500\",\n        opacity: 0.25,\n        pos: \"absolute\",\n        top: 0,\n        left: 0,\n        bottom: 0,\n        right: 0,\n        zIndex: -1,\n        content: '\" \"',\n      }}\n    >\n      <Flex\n        direction=\"column\"\n        alignItems=\"start\"\n        justifyContent=\"center\"\n        px={{ base: 4, lg: 20 }}\n        py={24}\n      >\n        <Badge\n          color=\"white\"\n          px={3}\n          py={1}\n          mb={3}\n          variant=\"solid\"\n          colorScheme=\"brand\"\n          rounded=\"full\"\n        >\n          Pre Beta\n        </Badge>\n        <chakra.h1\n          mb={6}\n          fontSize={{ base: \"4xl\", md: \"4xl\", lg: \"5xl\" }}\n          fontWeight=\"bold\"\n          color={useColorModeValue(\"brand.600\", \"gray.300\")}\n          lineHeight=\"shorter\"\n        >\n          Thank you for shopping with devMusic!\n          <ImMusic />\n        </chakra.h1>\n        <Link to={\"/\"}>\n          <Button>Continue Shopping</Button>\n        </Link>\n      </Flex>\n      <Box>\n        <Image\n          src=\"https://images.pexels.com/photos/290660/pexels-photo-290660.jpeg?cs=srgb&dl=pexels-pixabay-290660.jpg&fm=jpg\"\n          fit=\"cover\"\n          w=\"full\"\n          h={{ base: 64, md: \"full\" }}\n          bg=\"gray.100\"\n          loading=\"lazy\"\n        />\n      </Box>\n    </SimpleGrid>\n  );\n};\n\nexport default Checkout;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  chakra,\n  Flex,\n  Button,\n  Stack,\n  SimpleGrid,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  useDisclosure,\n  Text,\n} from \"@chakra-ui/react\";\n\nimport axios from \"axios\";\n\nexport default function Orders() {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [orders, setOrders] = useState([]);\n\n  useEffect(() => {\n    axios\n      .get(\"/api/auth/me/buyOrder\")\n      .then((resp) => resp.data)\n      .then((ordenes) => setOrders(ordenes));\n  }, []);\n\n  const data = orders;\n\n\n  return (\n    <Flex\n      w=\"full\"\n      bg=\"gray.600\"\n      p={50}\n      alignItems=\"center\"\n      justifyContent=\"center\"\n    >\n      <Stack direction={{ base: \"column\" }} w=\"full\" bg=\"white\" shadow=\"lg\">\n        <Flex direction={{ base: \"row\", md: \"column\" }} bg=\"grey\">\n          <SimpleGrid\n            spacingY={3}\n            columns={{ base: 1, md: 3 }}\n            w=\"full\"\n            py={2}\n            px={10}\n            fontWeight=\"hairline\"\n          >\n            <span>ORDER ID</span>\n            <chakra.span\n              textOverflow=\"ellipsis\"\n              overflow=\"hidden\"\n              whiteSpace=\"nowrap\"\n            >\n              PRICE\n            </chakra.span>\n          </SimpleGrid>\n        </Flex>\n\n        {data.map((orden, pid) => {\n          return (\n            <Flex\n              direction={{ base: \"row\", md: \"column\" }}\n              bg=\"white\"\n              key={pid}\n            >\n              <SimpleGrid\n                spacingY={3}\n                columns={{ base: 1, md: 3 }}\n                w=\"full\"\n                py={2}\n                px={10}\n                fontWeight=\"hairline\"\n              >\n                <span>{orden.buyOrderId}</span>\n                <chakra.span\n                  textOverflow=\"ellipsis\"\n                  overflow=\"hidden\"\n                  whiteSpace=\"nowrap\"\n                >\n                  {orden.order.total}\n                </chakra.span>\n\n                <>\n                  <Button onClick={onOpen}>View Order</Button>\n\n                  <Modal isOpen={isOpen} onClose={onClose}>\n                    <ModalOverlay />\n                    <ModalContent>\n                      <ModalHeader>Modal Title</ModalHeader>\n                      <ModalCloseButton />\n                      <ModalBody>\n                        {orden.order.products.map((element) => {\n                          return (\n                            <>\n                              <Text>{element.name} ${element.price}</Text>\n                            </>\n                          );\n                        })}\n                      </ModalBody>\n                      <ModalFooter>\n                        <Button colorScheme=\"blue\" mr={3} onClick={onClose}>\n                          Close\n                        </Button>\n                      </ModalFooter>\n                    </ModalContent>\n                  </Modal>\n                </>\n              </SimpleGrid>\n            </Flex>\n          );\n        })}\n      </Stack>\n    </Flex>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Button,\n  HStack,\n  Image,\n  Stack,\n  Text,\n  useBreakpointValue,\n} from \"@chakra-ui/react\";\nimport { Link } from \"react-router-dom\";\n//a\nfunction Card({ product }) {\n  return (\n    <Stack\n      w={\"60\"}\n      borderRadius=\"10\"\n      mt={2}\n      bg={\"black\"}\n      p=\"5\"\n      spacing={useBreakpointValue({\n        base: \"4\",\n        md: \"5\",\n      })}\n    >\n      <Box\n        position=\"relative\"\n        bg=\"white\"\n        borderRadius=\"10\"\n      >\n        <Image\n              rounded={\"lg\"}\n              height={229}\n              width={282}\n              objectFit={\"contain\"}\n              src={product.photo}\n            />\n      </Box>\n      <Stack>\n        <Stack spacing=\"1\">\n          <Text fontWeight=\"medium\" color=\"white\">\n            {product.name}\n          </Text>\n          <Text fontWeight={800} fontSize={\"xl\"} color=\"#ffcd1f\">\n            $ {product.price}\n          </Text>\n        </Stack>\n        <HStack></HStack>\n      </Stack>\n      <Stack align=\"center\">\n        <Link to={`/products/${product.id}`}>\n          <Button colorScheme=\"yellow\"isFullWidth>\n            see more\n          </Button>\n        </Link>\n      </Stack>\n    </Stack>\n  );\n}\n\nexport default Card;\n\n/*  <Box\n          role={\"group\"}\n          p={6}\n        \n          bg=\"black\"\n          boxShadow={\"2xl\"}\n          rounded={\"lg\"}\n          pos={\"relative\"}\n          zIndex={1}\n          m={2}\n        >\n          <Box\n            bg=\"white\"\n            pos={\"relative\"}\n            height={\"230px\"}\n            borderRightWidth={2}\n            boxShadow={\"lg\"}\n            _after={{\n              transition: \"all .3s ease\",\n              content: '\"\"',\n              w: \"full\",\n              h: \"full\",\n              pos: \"absolute\",\n              top: 5,\n              left: 0,\n              // backgroundImage: `url(${photo})`,\n              filter: \"blur(15px)\",\n              zIndex: -1,\n            }}\n            _groupHover={{\n              _after: {\n                filter: \"blur(20px)\",\n              },\n            }}\n          >\n            <Image\n              rounded={\"lg\"}\n              height={229}\n              width={282}\n              objectFit={\"contain\"}\n              src={product.photo}\n            />\n          </Box>\n          <Stack pt={10} align={\"center\"}>\n            <Heading\n              fontSize={\"md\"}\n              fontFamily={\"body\"}\n              fontWeight={500}\n              color=\"#ffcd1f\"\n            >\n              {product.name}\n            </Heading>\n            <Stack direction={\"row\"} align={\"center\"}>\n              <Text fontWeight={800} fontSize={\"xl\"} color=\"#ffcd1f\">\n                $ {product.price}\n              </Text>\n            </Stack>\n          </Stack>\n        </Box> */\n","import React, { useEffect } from \"react\";\nimport axios from \"axios\";\nimport Card from \"./Card\";\n\nimport Carousel from \"react-elastic-carousel\";\nimport { Heading, Box } from \"@chakra-ui/react\";\nconst breakPoints = [\n  { width: 1, itemsToShow: 1 },\n  { width: 550, itemsToShow: 2, itemsToScroll: 2 },\n  { width: 768, itemsToShow: 3 },\n  { width: 1200, itemsToShow: 4 },\n];\nconst ProductsGrid = () => {\n  const [cuerda, setCuerda] = React.useState([]);\n  const [viento, setViento] = React.useState([]);\n  const [percusion, setPercusion] = React.useState([]);\n\n  useEffect(() => {\n    axios\n      .get(`/api/products/category/cuerda`)\n      .then((res) => res.data)\n      .then((data) => {\n        setCuerda(data);\n      });\n    axios\n      .get(`/api/products/category/viento`)\n      .then((res) => res.data)\n      .then((data) => {\n        setViento(data);\n      });\n    axios\n      .get(`/api/products/category/percusion`)\n      .then((res) => res.data)\n      .then((data) => {\n        setPercusion(data);\n      });\n  }, []);\n\n  return (\n    <Box bg=\"#e6e6e6\">\n      <Box marginTop={20}>\n        <Heading\n          textAlign=\"center\"\n          fontFamily=\"Helvetica\"\n          marginTop={5}\n          marginBottom=\"20px\"\n        >\n          <br />\n          CUERDA\n        </Heading>\n        <Carousel breakPoints={breakPoints}>\n          {cuerda.map((product, i) => {\n            return <Card key={i} product={product} />;\n          })}\n        </Carousel>\n      </Box>\n      <>\n        <Heading\n          textAlign=\"center\"\n          marginTop=\"20px\"\n          marginBottom=\"20px\"\n          fontFamily={\"body\"}\n        >\n          <br />\n          PERCUSION\n        </Heading>\n        <Carousel breakPoints={breakPoints}>\n          {percusion.map((product, i) => {\n            return <Card key={i} product={product} />;\n          })}\n        </Carousel>\n      </>\n      <>\n        <Heading textAlign=\"center\" marginTop=\"20px\" marginBottom=\"20px\">\n          <br />\n          VIENTO\n        </Heading>\n        <Carousel breakPoints={breakPoints}>\n          {viento.map((product, i) => {\n            return <Card key={i} product={product} />;\n          })}\n        </Carousel>\n      </>\n    </Box>\n  );\n};\n\nexport default ProductsGrid;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useState } from \"react\";\nimport Card from \"./Card\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { Flex, Wrap, WrapItem, Button } from \"@chakra-ui/react\";\nimport axios from \"axios\";\n\nconst CategoryGrid = () => {\n  const history = useHistory();\n  let { category, page = 1 } = useParams();\n  page = parseInt(page);\n  const [productsCat, setProductsCat] = useState([]);\n  const [next, setNext] = useState([]);\n\n  useEffect(() => {\n    window.scrollTo({\n      top: 0,\n      behavior: \"smooth\",\n    });\n\n    axios\n      .get(`/api/products/category/${category}?page=${page}`)\n      .then((resp) => resp.data)\n      .then((productos) => setProductsCat(productos));\n\n    axios\n      .get(`/api/products/category/${category}?page=${page + 1}`)\n      .then((resp) => resp.data)\n      .then((productos) => setNext(productos));\n  }, [category, page]);\n  return (\n    <>\n      <Flex direction=\"column\" m={12}>\n        <Flex direction=\"row\">\n          <Wrap spacing=\"10px\" justify=\"center\" mr=\"10px\">\n            {productsCat.map((instrument, i) => (\n              <WrapItem key={i} m={5}>\n                <Card key={i} product={instrument} />\n              </WrapItem>\n            ))}\n          </Wrap>\n        </Flex>\n        <Flex direction=\"row\" mx=\"auto\" my=\"50px\">\n          {!(page === 1) && (\n            <Button\n              variant=\"outline\"\n              colorScheme=\"teal\"\n              mx=\"20px\"\n              onClick={() => {\n                history.push(`/category/${category}/${page - 1}`);\n              }}\n            >\n              PREV\n            </Button>\n          )}\n          {next.length > 0 && (\n            <Button\n              variant=\"outline\"\n              colorScheme=\"teal\"\n              mx=\"20px\"\n              onClick={() => history.push(`/category/${category}/${page + 1}`)}\n            >\n              NEXT\n            </Button>\n          )}\n        </Flex>\n      </Flex>\n    </>\n  );\n};\n\nexport default CategoryGrid;\n","import {\n    createAction,\n    createReducer,\n    createAsyncThunk,\n  } from \"@reduxjs/toolkit\";\n  import axios from \"axios\";\n\n  export const loginRequest = createAsyncThunk(\"LOGIN\", (data) => {\n    return axios.post(\"/api/auth/login\", data).then((res) => res.data);\n  });\n  \n  export const logoutRequest = createAsyncThunk(\"LOGOUT\", () => {\n    return axios.post(\"/api/auth/logout\");\n  });\n\n  export const setUser = createAction(\"SET_USER\");\n\n  const userReducer = createReducer(\n    {},\n    {\n      [setUser]: (state, action) => (state = action.payload),\n      [loginRequest.fulfilled]: (state, action) => (state = action.payload),\n      [logoutRequest.fulfilled]: (state, action) => (state = {}),\n    }\n  );\n\n  export default userReducer;\n","import { React, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { loginRequest } from \"../state/userReducer\";\nimport { useForm } from \"react-hook-form\";\nimport { AiFillFacebook } from \"react-icons/ai\";\nimport {\n  Flex,\n  Box,\n  FormControl,\n  FormLabel,\n  FormErrorMessage,\n  Input,\n  Checkbox,\n  Stack,\n  Link,\n  Button,\n  Heading,\n  useColorModeValue,\n  useToast,\n} from \"@chakra-ui/react\";\n\nexport default function LoginForm() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const valEmail =\n    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  const {\n    handleSubmit,\n    register,\n    formState: { errors },\n  } = useForm();\n  const toast = useToast();\n  const onSubmit = () => {\n    dispatch(loginRequest({ email, password })).then((res) => {\n      if (res.error) {\n        toast({\n          title: \"Wrong Credentials\",\n          description: \"check your email and password\",\n          status: \"warning\",\n          duration: 2000,\n          isClosable: true,\n        });\n        return;\n      } else {\n        toast({\n          title: \"Login Success\",\n          description: \"Welcome to devMusic\",\n          status: \"success\",\n          duration: 2000,\n          isClosable: true,\n        });\n        history.push(\"/\");\n        return;\n      }\n    });\n  };\n\n  return (\n    <div className=\"fondo\">\n      <Flex minH={\"100vh\"} align={\"center\"} justify={\"center\"}>\n        <Stack spacing={8} mx={\"auto\"} maxW={\"lg\"} py={12} px={6}>\n          <Stack align={\"center\"}>\n            <Heading fontSize={\"4xl\"} color=\"white\">\n              Login to your account\n            </Heading>\n          </Stack>\n          <Box\n            rounded={\"lg\"}\n            bg={useColorModeValue(\"white\", \"gray.700\")}\n            boxShadow={\"lg\"}\n            p={8}\n          >\n            <Stack spacing={4}>\n              <form onSubmit={handleSubmit(onSubmit)}>\n                <FormControl id=\"email\" isInvalid={errors.email} isRequired>\n                  <FormLabel htmlFor=\"email\">Email address</FormLabel>\n                  <Input\n                    type=\"text\"\n                    {...register(\"email\", {\n                      required: \"Email is Required\",\n                      pattern: {\n                        value: valEmail,\n                        message: \"Invalid email address\",\n                      },\n                    })}\n                    value={email}\n                    onChange={(e) => {\n                      setEmail(e.target.value);\n                    }}\n                  />\n                  <FormErrorMessage>\n                    {errors.email && errors.email.message}\n                  </FormErrorMessage>\n                </FormControl>\n\n                <FormControl\n                  id=\"password\"\n                  isInvalid={errors.password}\n                  isRequired\n                >\n                  <FormLabel htmlFor=\"password\">Password</FormLabel>\n                  <Input\n                    type=\"password\"\n                    {...register(\"password\", {\n                      required: \"Password is Required\",\n                      minLength: {\n                        value: 5,\n                        message: \"Minimum length should be 5\",\n                      },\n                    })}\n                    value={password}\n                    onChange={(e) => {\n                      setPassword(e.target.value);\n                    }}\n                  />\n                  <FormErrorMessage>\n                    {errors.password && errors.password.message}\n                  </FormErrorMessage>\n                </FormControl>\n                <Stack spacing={5}>\n                  <Stack\n                    direction={{ base: \"column\", sm: \"row\" }}\n                    align={\"start\"}\n                    justify={\"space-between\"}\n                  >\n                    <Checkbox>Remember me</Checkbox>\n                    <Link color={\"blue.400\"}>Forgot password?</Link>\n                  </Stack>\n                  <Button\n                    type=\"submit\"\n                    bg={\"#ffcd1f\"}\n                    color={\"black\"}\n                    _hover={{\n                      bg: \"#ffcd1f.400\",\n                      border: \"1px solid grey\",\n                    }}\n                  >\n                    Login\n                  </Button>\n                  <Button\n                    type=\"submit\"\n                    bg={\"blue.400\"}\n                    color={\"white\"}\n                    _hover={{\n                      bg: \"blue.500\",\n                      border: \"1px solid grey\",\n                    }}\n                    leftIcon={<AiFillFacebook />}\n                  >\n                    Login with Facebook\n                  </Button>\n                </Stack>\n              </form>\n            </Stack>\n          </Box>\n        </Stack>\n      </Flex>\n    </div>\n  );\n}\n","import { React, useState } from \"react\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport { AiFillFacebook } from \"react-icons/ai\";\n\nimport {\n  Flex,\n  Box,\n  FormControl,\n  FormLabel,\n  FormErrorMessage,\n  Input,\n  Checkbox,\n  Stack,\n  Link,\n  Button,\n  Heading,\n  useToast,\n} from \"@chakra-ui/react\";\n\nexport default function RegisterForm() {\n  const history = useHistory();\n  const toast = useToast();\n  const [userName, setUserName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [tel, setTel] = useState(\"\");\n\n  const {\n    handleSubmit,\n    register,\n    formState: { errors },\n  } = useForm();\n\n  const valUser = /^[a-zA-Z0-9_.-]*$/;\n  const noValUser = /[!\"#$%&'()+,-./:;<=>?@[\\]^_`{|}~]/;\n  const valNum = /^[0-9]+$/;\n  const valEmail =\n    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n  const onSubmit = ({ userName, email, password, tel }) => {\n    axios\n      .post(\"/api/auth/register\", {\n        userName,\n        email,\n        password,\n        tel,\n      })\n      .then((res) => res.data);\n    history.push(\"/login\");\n    toast({\n      title: \"Account created.\",\n      description: \"We've created your account for you.\",\n      status: \"success\",\n      duration: 2000,\n      isClosable: true,\n    });\n  };\n\n  return (\n    <div className=\"fondo\">\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <Flex minH={\"100vh\"} align={\"center\"} justify={\"center\"} >\n        <Stack spacing={8} mx={\"auto\"} maxW={\"lg\"} py={12} px={6}>\n          <Stack align={\"center\"}>\n            <Heading fontSize={\"4xl\"} color=\"white\">Register</Heading>\n          </Stack>\n          <Box rounded={\"lg\"} bg={\"white\"} boxShadow={\"lg\"} p={8}>\n            <Stack spacing={4}>\n              <FormControl\n                id=\"userName\"\n                isInvalid={noValUser.test(userName) || errors.userName}\n                isRequired\n              >\n                <FormLabel htmlFor=\"name\">User</FormLabel>\n                <Input\n                  id=\"userName\"\n                  type=\"text\"\n                  {...register(\"userName\", {\n                    required: \"Allow only numbers and characters\",\n                    pattern: {\n                      value: valUser,\n                      message: \"Allow Only numbers and characters\",\n                    },\n                    minLength: {\n                      value: 4,\n                      message: \"Minimum length should be 4\",\n                    },\n                  })}\n                  value={userName}\n                  onChange={(e) => {\n                    setUserName(e.target.value);\n                  }}\n                />\n                <FormErrorMessage>\n                  {errors.userName && errors.userName.message}\n                </FormErrorMessage>\n              </FormControl>\n\n              <FormControl id=\"email\" isInvalid={errors.email} isRequired>\n                <FormLabel htmlFor=\"email\">Email address</FormLabel>\n                <Input\n                  type=\"text\"\n                  {...register(\"email\", {\n                    required: \"Email is Required\",\n                    pattern: {\n                      value: valEmail,\n                      message: \"Invalid email address\",\n                    },\n                  })}\n                  value={email}\n                  onChange={(e) => {\n                    setEmail(e.target.value);\n                  }}\n                />\n                <FormErrorMessage>\n                  {errors.email && errors.email.message}\n                </FormErrorMessage>\n              </FormControl>\n\n              <FormControl id=\"password\" isInvalid={errors.password} isRequired>\n                <FormLabel htmlFor=\"password\">Password</FormLabel>\n                <Input\n                  type=\"password\"\n                  {...register(\"password\", {\n                    required: \"Password is Required\",\n                    minLength: {\n                      value: 5,\n                      message: \"Minimum length should be 5\",\n                    },\n                  })}\n                  value={password}\n                  onChange={(e) => {\n                    setPassword(e.target.value);\n                  }}\n                />\n                <FormErrorMessage>\n                  {errors.password && errors.password.message}\n                </FormErrorMessage>\n              </FormControl>\n\n              <FormControl\n                id=\"tel\"\n                isInvalid={valNum.test(tel) && errors.tel}\n                isRequired\n              >\n                <FormLabel htmlFor=\"name\">Telephone</FormLabel>\n                <Input\n                  id=\"tel\"\n                  type=\"number\"\n                  {...register(\"tel\", {\n                    required: \"Allow only numbers\",\n                    minLength: {\n                      value: 8,\n                      message: \"Minimum length should be 8\",\n                    },\n                    pattern: {\n                      value: valNum,\n                      message: \"Allow Only numbers\",\n                    },\n                  })}\n                  value={tel}\n                  onChange={(e) => {\n                    setTel(e.target.value);\n                  }}\n                />\n                <FormErrorMessage>\n                  {errors.tel && errors.tel.message}\n                </FormErrorMessage>\n              </FormControl>\n\n              <Stack spacing={10}>\n                <Stack\n                  direction={{ base: \"column\", sm: \"row\" }}\n                  align={\"start\"}\n                  justify={\"space-between\"}\n                >\n                  <Checkbox>Remember me</Checkbox>\n                  <Link color={\"blue.400\"}>Forgot-password?</Link>\n                </Stack>\n                <Button\n                  type=\"submit\"\n                  bg={\"#ffcd1f\"}\n                  color={\"black\"}\n                  _hover={{\n                    bg: \"#ffcd1f.400\",\n                    border: \"1px solid grey\",\n                  }}\n                >\n                  Sign up\n                </Button>\n                <Button\n                  type=\"submit\"\n                  bg={\"blue.400\"}\n                  color={\"white\"}\n                  _hover={{\n                    bg: \"blue.500\",\n                    border: \"1px solid grey\",\n                  }}\n                  leftIcon={<AiFillFacebook />}\n                >\n                  Sign up with Facebook\n                </Button>\n              </Stack>\n            </Stack>\n          </Box>\n        </Stack>\n      </Flex>\n    </form>\n    </div>\n  );\n}\n","import { useState, useEffect } from \"react\";\n\nimport axios from \"axios\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  Box,\n  useColorModeValue,\n  SimpleGrid,\n  GridItem,\n  Heading,\n  Stack,\n  FormControl,\n  FormLabel,\n  Input,\n  Select,\n  Textarea,\n  Button,\n  useToast,\n} from \"@chakra-ui/react\";\n\nexport default function AddProductForm() {\n  const [categories, setCategories] = useState([]);\n  const [name, setname] = useState(\"\");\n  const [model, setModel] = useState(\"\");\n  const [photo, setPhoto] = useState(\"\");\n  const [stock, setStock] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const toast = useToast();\n  const history = useHistory();\n\n  const { handleSubmit } = useForm();\n\n  const onSubmit = () => {\n    axios\n      .post(\"/api/admin\", {\n        name,\n        model,\n        photo,\n        stock,\n        price,\n        description,\n        category,\n      })\n      .then((res) => {\n        toast({\n          title: \"Action Success\",\n          description: \"Product Created\",\n          status: \"success\",\n          duration: 2000,\n          isClosable: true,\n        });\n        return res.data;\n      });\n    history.push(\"/admin/productslist\");\n  };\n\n  useEffect(() => {\n    axios\n      .get(\"api/products/category\")\n      .then((res) => res.data)\n      .then((data) => setCategories(data));\n  }, []);\n\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <Box bg={useColorModeValue(\"gray.50\", \"inherit\")} p={10}>\n        <Box visibility={{ base: \"hidden\", sm: \"visible\" }} aria-hidden=\"true\">\n          <Box py={5}>\n            <Box\n              borderTop=\"solid 1px\"\n              borderTopColor={useColorModeValue(\"gray.200\", \"whiteAlpha.200\")}\n            ></Box>\n          </Box>\n        </Box>\n\n        <Box mt={[10, 0]}>\n          <SimpleGrid\n            display={{ base: \"initial\", md: \"grid\" }}\n            columns={{ md: 3 }}\n            spacing={{ md: 6 }}\n          >\n            <GridItem colSpan={{ md: 1 }}>\n              <Box px={[4, 0]}>\n                <Heading fontSize=\"lg\" fontWeight=\"medium\" lineHeight=\"6\">\n                  Add a new product\n                </Heading>\n              </Box>\n            </GridItem>\n            <GridItem mt={[5, null, 0]} colSpan={{ md: 2 }}>\n              <Stack\n                px={4}\n                py={5}\n                p={[null, 6]}\n                bg={useColorModeValue(\"white\", \"gray.700\")}\n                spacing={6}\n              >\n                <SimpleGrid columns={6} spacing={6}>\n                  <FormControl as={GridItem} colSpan={[6, 3]}>\n                    <FormLabel\n                      htmlFor=\"first_name\"\n                      fontSize=\"sm\"\n                      fontWeight=\"md\"\n                      color={useColorModeValue(\"gray.700\", \"gray.50\")}\n                    >\n                      Name\n                    </FormLabel>\n                    <Input\n                      type=\"text\"\n                      name=\"first_name\"\n                      id=\"first_name\"\n                      autoComplete=\"given-name\"\n                      mt={1}\n                      focusBorderColor=\"brand.400\"\n                      shadow=\"sm\"\n                      size=\"sm\"\n                      w=\"full\"\n                      rounded=\"md\"\n                      value={name}\n                      onChange={(e) => {\n                        setname(e.target.value);\n                      }}\n                    />\n                  </FormControl>\n\n                  <FormControl as={GridItem} colSpan={[6, 3]}>\n                    <FormLabel\n                      htmlFor=\"last_name\"\n                      fontSize=\"sm\"\n                      fontWeight=\"md\"\n                      color={useColorModeValue(\"gray.700\", \"gray.50\")}\n                    >\n                      Model\n                    </FormLabel>\n                    <Input\n                      type=\"text\"\n                      name=\"last_name\"\n                      id=\"last_name\"\n                      autoComplete=\"family-name\"\n                      mt={1}\n                      focusBorderColor=\"brand.400\"\n                      shadow=\"sm\"\n                      size=\"sm\"\n                      w=\"full\"\n                      rounded=\"md\"\n                      value={model}\n                      onChange={(e) => {\n                        setModel(e.target.value);\n                      }}\n                    />\n                  </FormControl>\n                  <FormControl as={GridItem} colSpan={[6, 3]}>\n                    <FormLabel\n                      htmlFor=\"first_name\"\n                      fontSize=\"sm\"\n                      fontWeight=\"md\"\n                      color={useColorModeValue(\"gray.700\", \"gray.50\")}\n                    >\n                      Stock\n                    </FormLabel>\n                    <Input\n                      type=\"number\"\n                 \n                      autoComplete=\"given-name\"\n                      mt={1}\n                      focusBorderColor=\"brand.400\"\n                      shadow=\"sm\"\n                      size=\"sm\"\n                      w=\"full\"\n                      rounded=\"md\"\n                      value={stock}\n                      onChange={(e) => {\n                        setStock(e.target.value);\n                      }}\n                    />\n                  </FormControl>\n\n                  <FormControl as={GridItem} colSpan={[6, 3]}>\n                    <FormLabel\n                      htmlFor=\"last_name\"\n                      fontSize=\"sm\"\n                      fontWeight=\"md\"\n                      color={useColorModeValue(\"gray.700\", \"gray.50\")}\n                    >\n                      Price\n                    </FormLabel>\n                    <Input\n                      type=\"number\"\n                      autoComplete=\"family-name\"\n                      mt={1}\n                      focusBorderColor=\"brand.400\"\n                      shadow=\"sm\"\n                      size=\"sm\"\n                      w=\"full\"\n                      rounded=\"md\"\n                      value={price}\n                      onChange={(e) => {\n                        setPrice(e.target.value);\n                      }}\n                    />\n                  </FormControl>\n\n                  <FormControl as={GridItem} colSpan={6}>\n                    <FormLabel\n                      htmlFor=\"street_address\"\n                      fontSize=\"sm\"\n                      fontWeight=\"md\"\n                      color={useColorModeValue(\"gray.700\", \"gray.50\")}\n                    >\n                      Photo Url\n                    </FormLabel>\n                    <Input\n                      type=\"text\"\n                      name=\"street_address\"\n                      id=\"street_address\"\n                      autoComplete=\"street-address\"\n                      mt={1}\n                      focusBorderColor=\"brand.400\"\n                      shadow=\"sm\"\n                      size=\"sm\"\n                      w=\"full\"\n                      rounded=\"md\"\n                      value={photo}\n                      onChange={(e) => {\n                        setPhoto(e.target.value);\n                      }}\n                    />\n                  </FormControl>\n                  <FormControl as={GridItem} colSpan={[6, 6, null, 2]}>\n                    <Select\n                      onChange={(e) => setCategory(e.target.value)}\n                      placeholder=\"Select category\"\n                    >\n                      {categories.map((cat) => (\n                        <option value={cat.name}>{cat.name}</option>\n                      ))}\n                    </Select>\n                  </FormControl>\n                  <FormControl as={GridItem} colSpan={[6, 6, null, 2]}>\n                    <div>\n                      <FormControl id=\"email\" mt={1} >\n                        <FormLabel\n                          fontSize=\"sm\"\n                          fontWeight=\"md\"\n                          color={useColorModeValue(\"gray.700\", \"gray.50\")}\n                        >\n                          Description\n                        </FormLabel>\n                        <Textarea\n                          placeholder=\"Add a description.\"\n                          mt={1}\n                          shadow=\"sm\"\n                          focusBorderColor=\"brand.400\"\n                          fontSize={{ sm: \"sm\" }}\n                          value={description}\n                          onChange={(e) => {\n                            setDescription(e.target.value);\n                          }}\n                        />\n                      </FormControl>\n                    </div>\n                  </FormControl>\n                </SimpleGrid>\n              </Stack>\n              <Box\n                px={{ base: 4, sm: 6 }}\n                py={3}\n                bg={useColorModeValue(\"gray.50\", \"gray.900\")}\n                textAlign=\"right\"\n              >\n                <Button\n                  type=\"submit\"\n                  colorScheme=\"blue\"\n                  _focus={{ shadow: \"\" }}\n                  fontWeight=\"md\"\n                >\n                  Save\n                </Button>\n              </Box>\n            </GridItem>\n          </SimpleGrid>\n        </Box>\n      </Box>\n    </form>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport {\n  chakra,\n  Flex,\n  Button,\n  Stack,\n  SimpleGrid,\n  useToast,\n} from \"@chakra-ui/react\";\n\nexport default function Component() {\n  const [products, setProducts] = useState([]);\n  const toast = useToast();\n\n  useEffect(() => {\n    axios\n      .get(`/api/cart`)\n      .then((resp) => {\n        return resp.data;\n      })\n      .then((data) => setProducts(data.products));\n  }, []);\n\n  const data = products;\n\n  const handlerBuy = () => {\n    axios.put(`/api/cart/buy`).then((resp) => {\n      toast({\n        title: \"Purchase Success.\",\n        description: \"Check your mail for confirmation.\",\n        status: \"success\",\n        duration: 2000,\n        isClosable: true,\n      });\n      return resp.data;\n    });\n  };\n\n\n  const hanlderAppend = (product) => {\n    axios\n      .post(`/api/cart`, {\n        id: product.id,\n        price: product.price,\n      })\n      .then((resp) => {\n        toast({\n          title: \"Action Success.\",\n          description: \"Product Added.\",\n          status: \"success\",\n          duration: 2000,\n          isClosable: true,\n        });\n        return resp.data;\n      })\n      .then(() => {\n        axios\n          .get(`/api/cart`)\n          .then((resp) => resp.data)\n          .then((data) => setProducts(data.products));\n      });\n  };\n\n  const handlerSubstract = (product) => {\n    axios\n      .delete(`/api/cart`, {\n        data: { idProduct: product.id, price: product.price },\n      })\n      .then((resp) => {\n        toast({\n          title: \"Action Success.\",\n          description: \"Product deleted.\",\n          status: \"error\",\n          duration: 2000,\n          isClosable: true,\n        });\n        return resp.data;\n      })\n      .then(() => {\n        axios\n          .get(`/api/cart`)\n          .then((resp) => resp.data)\n          .then((data) => setProducts(data.products));\n      });\n  };\n\n  const total = products.reduce((acum, products) => {\n    return (acum = products.price * products.cantidad + acum);\n  }, 0);\n\n  return (\n    <Flex\n      w=\"full\"\n      bg=\"white\"\n      p={50}\n      alignItems=\"center\"\n      justifyContent=\"center\"\n    >\n      <Stack direction={{ base: \"column\" }} w=\"full\" bg=\"white\" shadow=\"lg\">\n        <Flex direction={{ base: \"row\", md: \"column\" }} bg=\"grey\">\n          <SimpleGrid\n            spacingY={3}\n            columns={{ base: 1, md: 4 }}\n            w=\"full\"\n            py={2}\n            px={10}\n            fontWeight=\"hairline\"\n          >\n            <span>Name</span>\n            <chakra.span\n              textOverflow=\"ellipsis\"\n              overflow=\"hidden\"\n              whiteSpace=\"nowrap\"\n            >\n              Quantity\n            </chakra.span>\n            <chakra.span\n              textOverflow=\"ellipsis\"\n              overflow=\"hidden\"\n              whiteSpace=\"nowrap\"\n            >\n              Price\n            </chakra.span>\n          </SimpleGrid>\n        </Flex>\n        {data.map((product, pid) => {\n          return (\n            <Flex\n              direction={{ base: \"row\", md: \"column\" }}\n              bg=\"white\"\n              key={pid}\n            >\n              <SimpleGrid\n                spacingY={3}\n                columns={{ base: 1, md: 4 }}\n                w=\"full\"\n                py={2}\n                px={10}\n                fontWeight=\"hairline\"\n              >\n                <span>{product.name}</span>\n                <span>{product.cantidad}</span>\n\n                <chakra.span\n                  textOverflow=\"ellipsis\"\n                  overflow=\"hidden\"\n                  whiteSpace=\"nowrap\"\n                >\n                  {product.price * product.cantidad}\n                </chakra.span>\n\n                <Flex justify={{ md: \"end\" }}>\n                  <Button\n                    isDisabled={(product.stock <= product.cantidad)}\n                    variant=\"solid\"\n                    colorScheme=\"green\"\n                    size=\"sm\"\n                    mr={2}\n                    onClick={() => {\n                      hanlderAppend(product);\n                    }}\n                  >\n                    +\n                  </Button>\n\n                  <Button\n                    variant=\"solid\"\n                    colorScheme=\"red\"\n                    size=\"sm\"\n                    onClick={() => {\n                      handlerSubstract(product);\n                    }}\n                  >\n                    -\n                  </Button>\n                </Flex>\n              </SimpleGrid>\n            </Flex>\n          );\n        })}\n\n        <Stack\n          direction={{ base: \"column\" }}\n          w=\"full\"\n          bg=\"gray.800\"\n          shadow=\"lg\"\n        >\n          <Flex direction={{ base: \"row\", md: \"column\" }} bg=\"grey\">\n            <SimpleGrid\n              spacingY={3}\n              columns={{ base: 1, md: 4 }}\n              w=\"full\"\n              py={2}\n              px={10}\n              fontWeight=\"hairline\"\n            >\n              <span>{`Total: $${total}`}</span>\n\n              <Link to=\"/checkout\">\n                <Button\n                  isDisabled={!products.length}\n                  variant=\"solid\"\n                  colorScheme=\"green\"\n                  size=\"sm\"\n                  onClick={handlerBuy}\n                >\n                  Buy\n                </Button>\n              </Link>\n            </SimpleGrid>\n          </Flex>\n        </Stack>\n      </Stack>\n    </Flex>\n  );\n}\n","import React from \"react\";\nimport {\n  chakra,\n  Box,\n  Image,\n  Flex,\n  Icon,\n  useColorModeValue,\n} from \"@chakra-ui/react\";\n\nimport { MdHeadset, MdEmail, MdLocationOn } from \"react-icons/md\";\nimport { BsFillBriefcaseFill } from \"react-icons/bs\";\n\nconst DevsPage = ({data}) => {\n  return (\n    <Flex\n      bg={useColorModeValue(\"#F9FAFB\", \"gray.600\")}\n      p={25}\n      w=\"full\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n    >\n      <Box\n        w=\"sm\"\n        mx=\"auto\"\n        bg={useColorModeValue(\"white\", \"gray.800\")}\n        shadow=\"lg\"\n        rounded=\"lg\"\n        overflow=\"hidden\"\n      >\n        <Image\n          w=\"full\"\n          h={56}\n          fit=\"cover\"\n          objectPosition=\"center\"\n          objectFit={\"contain\"}\n          src=  {data.photo}\n          alt=\"avatar\"\n        />\n\n        <Flex alignItems=\"center\" px={6} py={3} bg=\"gray.900\">\n          <Icon as={MdHeadset} h={6} w={6} color=\"white\" />\n\n          <chakra.h1 mx={3} color=\"white\" fontWeight=\"bold\" fontSize=\"lg\">\n           {data.title}\n          </chakra.h1>\n        </Flex>\n\n        <Box py={4} px={6}>\n          <chakra.h1\n            fontSize=\"xl\"\n            fontWeight=\"bold\"\n            color={useColorModeValue(\"gray.800\", \"white\")}\n          >\n            {data.name}\n          </chakra.h1>\n\n          <chakra.p py={2} color={useColorModeValue(\"gray.700\", \"gray.400\")}>\n           {data.description}\n          </chakra.p>\n\n          <Flex\n            alignItems=\"center\"\n            mt={4}\n            color={useColorModeValue(\"gray.700\", \"gray.200\")}\n          >\n            <Icon\n              as={BsFillBriefcaseFill}\n              h={6}\n              w={6}\n              mr={2}\n            />\n\n            <chakra.h1 px={2} fontSize=\"sm\">\n            {data.job}\n            </chakra.h1>\n          </Flex>\n\n          <Flex\n            alignItems=\"center\"\n            mt={4}\n            color={useColorModeValue(\"gray.700\", \"gray.200\")}\n          >\n            <Icon as={MdLocationOn} h={6} w={6} mr={2} />\n\n            <chakra.h1 px={2} fontSize=\"sm\">\n            {data.country}\n            </chakra.h1>\n          </Flex>\n          <Flex\n            alignItems=\"center\"\n            mt={4}\n            color={useColorModeValue(\"gray.700\", \"gray.200\")}\n          >\n            <Icon as={MdEmail} h={6} w={6} mr={2} />\n\n            <chakra.h1 px={2} fontSize=\"sm\">\n            {data.email}\n            </chakra.h1>\n          </Flex>\n        </Box>\n      </Box>\n    </Flex>\n  );\n};\n\nexport default DevsPage;","import React from \"react\";\nimport DevCard from \"./DevCard\";\nimport { Flex, WrapItem, Wrap } from \"@chakra-ui/react\";\n\nconst DevsPage = () => {\n  const dataOva = {\n    title: \"EL TITAN\",\n    photo:\n      \"https://cdn.discordapp.com/attachments/897571153550389278/910976210685816912/0s.jpg\",\n    name: \"Osvaldo Ojeda\",\n    description:\n      \"Full Stack maker & UI / UX Designer , le gusta decir pipu y titan, amante de la chocolatada 💕es amante de php y laravel💕\",\n    job: \"Vicepresidente Jr\",\n    country: \"Buenos Aires, Argentina\",\n    email: \"osvaldoojedadeveloper@gmail.com\",\n  };\n\n  const dataMaxi = {\n    title: \"El conductista\",\n    photo:\n      \"https://cdn.discordapp.com/attachments/888449049852805190/910979862620168192/yo.jpg\",\n    name: \"Maxi Linari\",\n    description:\n      \"Full Stack maker & UI / UX Designer , le gusta decir palabras raras y le duele la espalda, sueña con ser coach de p5\",\n    job: \" Senior UX Consultant y coach\",\n    country: \"Buenos Aires, Argentina\",\n    email: \"mjlinari@gmail.com\",\n  };\n\n  const dataIvo = {\n    title: \"Mr insomnia\",\n    photo:\n      \"https://cdn.discordapp.com/attachments/906277443361472608/910990051381493860/Screenshot_20211118-172736.png\",\n    name: \"Iván Dominguez\",\n    description: \"Full Stack maker & UI / UX Designer , no tiene mas fotos, da mala suerte en el lol pero parece ser un agradable sujeto\",\n    job: \"CEO devMusic\",\n    country: \"Cerca de todo\",\n    email: \"ivanleodomin00@gmail.com\",\n  };\n  const dataTomi = {\n    title: \"Don Matcha\",\n    photo:\n      \"https://cdn.discordapp.com/attachments/887366490213474314/910985767340376155/Yo_Foto_perfecta_para_Linkedin.jpeg\",\n    name: \"Tomi Gil Amoedo\",\n    description:\n      \"Full Stack maker & UI / UX Designer, le gusta el matcha, tiene una foto perfecta para Linkedin y queria usar Material UI\",\n    job: \"Leader UX Design Sector\",\n    country: \"Buenos Aires, Argentina\",\n    email: \"tomasgilamoedo@gmail.com\",\n  };\n  const dataMaru = {\n    title: \"La silenciosa\",\n    photo:\n      \"https://cdn.discordapp.com/attachments/888120738597462086/910985965705789510/IMG_20211107_013800824_1.jpg\",\n    name: \"Maru Guerrero\",\n    description:\n      \"Full Stack maker & UI / UX Designer , se mutea mucho y no le gusta el diseño. Estudio medicina pero con la programacion se lucra mas\",\n    job: \"Developer facherita\",\n    country: \"Desconocido\",\n    email: \"maruguerrero7@gmail.com\",\n  };\n\n  const dataMati = {\n    title: \"Don Chakra\",\n    name:\"Mati Di Fiore\",\n    photo:\n      \"https://cdn.discordapp.com/attachments/888120738597462086/910993017077391360/Screenshot_20211118-174011.png\",\n    description:\n      \"Full Stack maker & UI / UX Designer , lloro la primer semana por Chakra pero ahora es un senior casi semi, tiene una foto con un canguro\",\n    job: \"President devMusic\",\n    country: \"Buenos Aires, Argentina\",\n    email: \"difioremati@gmail.com\",\n  };\n\n  return (\n    <Flex direction=\"column\">\n      <Flex direction=\"row\">\n        <Wrap spacing=\"10px\" justify=\"center\" mr=\"10px\">\n          <WrapItem>\n            <DevCard data={dataOva} />\n          </WrapItem>\n          <WrapItem>\n            <DevCard data={dataMaru} />\n          </WrapItem>\n          <WrapItem>\n            <DevCard data={dataIvo} />\n          </WrapItem>\n          <WrapItem>\n            <DevCard data={dataMaxi} />\n          </WrapItem>\n          <WrapItem>\n            <DevCard data={dataMati} />\n          </WrapItem>\n          <WrapItem>\n            <DevCard data={dataTomi} />\n          </WrapItem>\n        </Wrap>\n      </Flex>\n    </Flex>\n  );\n};\n\nexport default DevsPage;","import React from \"react\";\nimport { ChatIcon, StarIcon } from \"@chakra-ui/icons\";\nimport { chakra, Box, Image, Flex, Icon } from \"@chakra-ui/react\";\n\nconst SingleComment = ({ comment }) => {\n  return (\n    <Flex\n      p={1}\n      alignItems=\"center\" //chequear\n      justifyContent=\"center\"\n      rounded=\"lg\"\n    >\n      <Box\n        w=\"sm\"\n        mx=\"auto\"\n        py={2}\n        px={6}\n        bg=\"#E4EBF1\"\n        shadow=\"lg\"\n        rounded=\"lg\"\n      >\n        <Icon as={ChatIcon} color=\"black\" />\n\n        <chakra.p     color=\"black\">{comment.content}</chakra.p>\n        <Box d=\"flex\" mt=\"2\" alignItems=\"center\">\n          {Array(5)\n            .fill(\"\")\n            .map((_, i) => (\n              <StarIcon\n                key={i}\n                color={i <= comment.puntuacion ? \"teal.500\" : \"gray.300\"}\n              />\n            ))}\n        </Box>\n\n        <Flex justifyContent=\"end\" fontSize=\"md\" mr=\"1\" color=\"black\">\n          <Box mr=\"5\">User</Box>\n          <Flex justifyContent={{ base: \"center\", md: \"end\" }}>\n            <Image\n              w={8}\n              h={8}\n              rounded=\"full\"\n              borderStyle=\"solid\"\n              borderWidth={2}\n              borderColor=\"brand.100\"\n              alt=\"Testimonial avatar\"\n              src=\"https://upload.wikimedia.org/wikipedia/commons/9/99/Sample_User_Icon.png\"\n            />\n          </Flex>\n        </Flex>\n      </Box>\n    </Flex>\n  );\n};\n\nexport default SingleComment;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useState } from \"react\";\nimport { Box } from \"@chakra-ui/layout\";\nimport { StarIcon, AddIcon } from \"@chakra-ui/icons\";\nimport {\n  Wrap,\n  chakra,\n  WrapItem,\n  Heading,\n  Textarea,\n  Button,\n  Text,\n  Stack,\n  Flex,\n  useToast,\n} from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport SingleComment from \"./SingleComment\";\n\nconst CommentSection = ({ id }) => {\n  const toast = useToast();\n  const [getcomments, setGetComments] = useState([]);\n  const [puntuacion, setPuntuacion] = useState(0);\n  const [content, setContent] = useState(\"\");\n  const [userId, setUserId] = useState(\"\");\n  const [buyConditions, setBuyConditions] = useState(false);\n  const [actualize, setActualize] = useState(\"\");\n\n  useEffect(() => {\n    axios\n      .get(`/api/products/id/${id}`)\n      .then((res) => res.data) //=>\n      .then((data) => {\n        setGetComments(data.comments);\n      })\n  }, [actualize]);\n\n  let comento = false;\n  //Busca id de usuario no sabia como hacerlo jelp.\n  useEffect(() => {\n    axios.get(\"/api/auth/me\").then((resp) => {\n      if (!resp.data) return;\n      else return setUserId(resp.data.id);\n    });\n  }, []);\n  //postea el comentario\n\n  const handleSubmit = (e) => {\n    axios\n      .post(`/api/comments/${id}`, { content: content, puntuacion: puntuacion })\n      .then((res) => setActualize(res.data));\n  };\n\n  //busca los usuarios  order.products\n  useEffect(() => {\n    axios.get(`/api/auth/me/buyOrder/${id}`).then((res) => {\n      setBuyConditions(res.data);\n    });\n  }, [userId]);\n  getcomments.forEach((comment) => {\n    if (comment.userId === userId) {\n      comento = true;\n    }\n  });\n\n  return (\n    <Box\n      w=\"md\"\n      mx=\"auto\"\n      py={2}\n      px={6}\n      mr={250}\n      bg=\"white\"\n      /*       shadow=\"dark-lg\"\n       */ rounded=\"lg\"\n      border=\"5px\"\n      Color=\"#FFCD1F\"\n    >\n      <Heading color=\"black\" >\n    \n        Comment section:</Heading>\n      {buyConditions === true && (\n        <Box>\n          <>\n            <Text mb=\"8px\" color=\"black\">\n              Rate this product:\n            </Text>\n            <Stack direction=\"row\" spacing={5}>\n              <Box d=\"flex\" mt=\"2\" alignItems=\"center\" mb={6}>\n                {Array(5)\n                  .fill(\"\")\n                  .map((_, i) => (\n                    <StarIcon\n                      key={i}\n                      onClick={() => setPuntuacion(i)}\n                      color={i <= puntuacion ? \"teal.500\" : \"gray.300\"}\n                    />\n                  ))}\n              </Box>\n            </Stack>\n\n            <Text mb=\"8px\" color=\"black\">\n              {comento === true ? \"Edit your coment\" : \"Leave a comment:\"}\n            </Text>\n            <Textarea\n              color=\"black\"\n              value={content}\n              onChange={(e) => setContent(e.target.value)}\n              placeholder=\"Here is a sample placeholder\"\n              size=\"sm\"\n            />\n          </>\n          <Flex\n            justifyContent={{ base: \"center\", md: \"end\" }}\n            m={3}\n            \n          >\n            <Button bg=\"black\"\n            onClick={() => {\n              handleSubmit();\n              toast({\n                title: \"Comment! 👍\",\n                description: \"Successful operation\",\n                status: \"info\",\n                duration: 2000,\n                isClosable: true,\n              });\n            }}>\n              <AddIcon color=\"white\" />\n            </Button>\n          </Flex>\n        </Box>\n      )}\n\n      <Box d=\"flex\" alignItems=\"flex-start\" justifyContent=\"\" w=\"auto\">\n        {getcomments.length > 0 ? (\n          <Wrap>\n            {getcomments.map((comment, i) => {\n              return (\n                <WrapItem key={i}>\n                  <SingleComment comment={comment} />\n                </WrapItem>\n              );\n            })}\n          </Wrap>\n        ) : (\n          <Wrap>\n            <Flex\n              bg={(\"#F9FAFB\", \"#0c0f0a\")}\n              p={1}\n              alignItems=\"center\" //chequear\n              justifyContent=\"center\"\n              rounded=\"lg\"\n            >\n              <Box\n                w=\"md\"\n                mx=\"auto\"\n                py={2}\n                px={6}\n                bg=\"#0c0f0a\"\n                shadow=\"lg\"\n                rounded=\"lg\"\n              >\n                <chakra.p bg=\"#0c0f0a\" color=\"gray.200\">Sin comentarios</chakra.p>\n              </Box>\n            </Flex>\n          </Wrap>\n        )}\n      </Box>\n    </Box>\n  );\n};\n\nexport default CommentSection;\n","import React, { useEffect } from \"react\";\nimport {\n  chakra,\n  Box,\n  Link,\n  Image,\n  SimpleGrid,\n  Text,\n  useToast,\n} from \"@chakra-ui/react\";\nimport { StarIcon } from \"@chakra-ui/icons\";\nimport axios from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport CommentSection from \"./CommentSection\";\n\nconst CardProduct= () => {\n  const { id } = useParams();\n  const [product, setProduct] = React.useState({});\n  const [valoration, setValoration] = React.useState({});\n  const user = useSelector((state) => state.user);\n  const toast = useToast();\n  useEffect(() => {\n    axios\n      .get(`/api/products/id/${id}`)\n      .then((resp) => resp.data)\n      .then((data) => {\n        setProduct(data.product);\n        setValoration(data.valoration);\n      });\n  }, [id]);\n\n  const addToCart = () => {\n    return axios\n      .post(`/api/cart`, { id: product.id, price: product.price })\n      .then((resp) => {\n        toast({\n          title: \"Product added \",\n          description: \"Your product has been added\",\n          status: \"success\",\n          duration: 2000,\n          isClosable: true,\n        });\n        return resp.data;\n      });\n  };\n\n  return (\n    <Box height=\"full\">\n      <SimpleGrid\n        columns={2}\n        minChildWidth=\"300px\"\n      >\n        <Box bg={\"black\"} m=\"10\">\n          <Box alignItems=\"center\">\n            <Image\n              mt=\"5\"\n              ml=\"25px\"\n              mr=\"10px\"\n              rounded={\"lg\"}\n              height=\"full\"\n              width=\"90%\"\n              objectFit={\"contain\"}\n              src={product.photo}\n            />\n          </Box>\n\n          <Box ml=\"25px\" py={12} px={6}>\n            <chakra.h2\n              fontSize={{ base: \"2xl\", md: \"3xl\" }}\n              color=\"#ffcd1f\"\n              fontWeight=\"bold\"\n            >\n              {product.name}\n            </chakra.h2>\n            <chakra.p mt={4} color=\"#ffcd1f\">\n              {product.description}\n            </chakra.p>\n            <chakra.h1 color=\"#ffcd1f\" fontWeight=\"bold\" fontSize=\"lg\">\n              USD {product.price}\n            </chakra.h1>\n            <chakra.h1 color=\"#ffcd1f\" fontWeight=\"bold\" fontSize=\"lg\">\n              Stock: {product.stock}\n            </chakra.h1>\n            <Box d=\"flex\" mt=\"2\" alignItems=\"center\">\n              {Array(5)\n                .fill(\"\")\n                .map((_, i) => (\n                  <StarIcon\n                    key={i}\n                    color={i <= valoration ? \"teal.500\" : \"gray.300\"}\n                  />\n                ))}\n            </Box>\n\n            {user?.id ? (\n              <Box mt={8}>\n                {product.stock > 0 ? (\n                  <Link\n                    onClick={addToCart}\n                    bg=\"#FFCD1F\"\n                    color=\"black\"\n                    px={5}\n                    py={3}\n                    fontWeight=\"semibold\"\n                    rounded=\"lg\"\n                    _hover={{ bg: \"gray.800\" }}\n                  >\n                    Add to Cart\n                  </Link>\n                ) : (\n                  <Text\n                    bg=\"#FFCD1F\"\n                    color=\"black\"\n                    px={5}\n                    py={3}\n                    fontWeight=\"semibold\"\n                    rounded=\"lg\"\n                    textAlign={\"center\"}\n                  >\n                    SIN STOCK\n                  </Text>\n                )}\n              </Box>\n            ) : (\n              <Box mt={8}>\n                <Link\n                  href=\"/login\"\n                  bg=\"gray.900\"\n                  color=\"gray.100\"\n                  px={5}\n                  py={3}\n                  fontWeight=\"semibold\"\n                  rounded=\"lg\"\n                  _hover={{ bg: \"gray.800\" }}\n                >\n                  Login\n                </Link>\n              </Box>\n            )}\n          </Box>\n        </Box>\n\n        <Box w=\"full\" h=\"full\" justifyContent={\"center\"} minChildWidth=\"300px\">\n          <CommentSection id={id} />\n        </Box>\n      </SimpleGrid>\n    </Box>\n  );\n};\n\nexport default CardProduct;\n","import React from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Card from \"./Card\";\nimport { Flex, Wrap, WrapItem, Button } from \"@chakra-ui/react\";\n\nexport default function Search() {\n  const history = useHistory();\n  let { name, page } = useParams();\n  page = parseInt(page);\n  const [products, setProducts] = React.useState([]);\n  const [next, setNext] = React.useState([]);\n\n  React.useEffect(() => {\n    window.scrollTo({\n      top: 0,\n      behavior: \"smooth\",\n    });\n    axios\n      .get(`/api/products/name/${name}?page=${page}`)\n      .then((res) => res.data)\n      .then((data) => {\n        setProducts(data);\n      });\n\n    axios\n      .get(`/api/products/name/${name}?page=${page + 1}`)\n      .then((res) => res.data)\n      .then((data) => {\n        setNext(data);\n      });\n  }, [name, page]);\n\n  return (\n    <>\n      <Flex direction=\"column\" m={12}>\n        <Flex direction=\"row\">\n          <Wrap spacing=\"10px\" justify=\"center\" mr=\"10px\">\n            {products.map((instrument, i) => (\n              <WrapItem m={5} key={i}>\n                <Card key={i} product={instrument} />\n              </WrapItem>\n            ))}\n          </Wrap>\n        </Flex>\n        <Flex direction=\"row\" mx=\"auto\" my=\"50px\">\n          {!(page === 1) && (\n            <Button\n              variant=\"outline\"\n              colorScheme=\"teal\"\n              mx=\"20px\"\n              onClick={() => {\n                history.push(`/search/${name}/${page - 1}`);\n              }}\n            >\n              PREV\n            </Button>\n          )}\n          {next.length > 0 && (\n            <Button\n              variant=\"outline\"\n              colorScheme=\"teal\"\n              mx=\"20px\"\n              onClick={() => history.push(`/search/${name}/${page + 1}`)}\n            >\n              NEXT\n            </Button>\n          )}\n        </Flex>\n      </Flex>\n    </>\n  );\n}\n","import {\n  Button,\n  Menu,\n  MenuItem,\n  MenuButton,\n  MenuList,\n  Box,\n} from \"@chakra-ui/react\";\nimport { Link } from \"react-router-dom\";\nimport React, { useState, useEffect } from \"react\";\n\nimport axios from \"axios\";\nimport { ChevronDownIcon } from \"@chakra-ui/icons\";\n\nexport default function ButtonCategory() {\n  const [categorias, setCategorias] = useState([]);\n  useEffect(() => {\n    axios\n      .get(\"/api/products/category\")\n      .then((resp) => resp.data)\n      .then((categorias) => {\n        setCategorias(categorias);\n      });\n  }, []);\n\n  return (\n    <Box mr={3}>\n      <Menu>\n        <MenuButton\n          variant=\"solid\"\n          bg=\"#ffcd1f\"\n          color=\"black\"\n          as={Button}\n          rightIcon={<ChevronDownIcon />}\n        >\n          Categories\n        </MenuButton>\n        <MenuList color=\"#ffcd1f\" bg=\"#0c0f0a\" z-index=\"99\">\n          {categorias.map((categoria, i) => (\n            <Link key={i} to={`/category/${categoria.name}/1`}>\n              <MenuItem>{categoria.name}</MenuItem>\n            </Link>\n          ))}\n        </MenuList>\n      </Menu>\n    </Box>\n  );\n}\n","import { InputGroup, Input, Box } from \"@chakra-ui/react\";\n\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function SearchInput({ movile }) {\n  const history = useHistory();\n  const [search, setSearch] = useState(\"\");\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    history.push(`/search/${search}/1`);\n  };\n  return (\n    <Box w=\"full\" mr=\"20\">\n      <form onSubmit={handleSubmit}>\n        <InputGroup>\n          <Input\n            color={movile ? \"black\" : \"white\"}\n            type=\"text\"\n            placeholder=\"Search...\"\n            value={search}\n            onChange={(e) => setSearch(e.target.value)}\n          />\n        </InputGroup>\n      </form>\n    </Box>\n  );\n}\n","import {\n  Box,\n  IconButton,\n  Button,\n  HStack,\n  Menu,\n  MenuItem,\n  MenuButton,\n  MenuList,\n  Flex,\n} from \"@chakra-ui/react\";\n\nimport { Link } from \"react-router-dom\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { logoutRequest } from \"../../state/userReducer\";\n\nimport { AiOutlineShoppingCart } from \"react-icons/ai\";\nimport { FaUserCog } from \"react-icons/fa\";\n\nexport default function AccountButtons({ mt }) {\n  const user = useSelector((state) => state.user);\n  const dispatch = useDispatch();\n  const handleLogout = () => {\n    dispatch(logoutRequest());\n  };\n\n  return (\n    <Flex mt={mt ? mt : 0} >\n      {user?.id ? (\n        user.isAdmin ? (\n          <HStack>\n            <Box zIndex=\"9999\">\n              {user.isSuperAdmin ? (\n                <Menu>\n                  <MenuButton\n                    variant=\"solid\"\n                    bg=\"black\"\n                    as={Button}\n                    icon={<FaUserCog />}\n                  >\n                    SuperAdmin\n                  </MenuButton>\n                  <MenuList bg=\"black\">\n                    <Link to=\"/admin/users\">\n                      <MenuItem>Set Users</MenuItem>\n                    </Link>\n\n                    <Link to=\"/admin/categories\">\n                      <MenuItem>Set Categories</MenuItem>\n                    </Link>\n                    <Link to=\"/admin/productslist\">\n                      <MenuItem>Set Products</MenuItem>\n                    </Link>\n                  </MenuList>\n                </Menu>\n              ) : (\n                <Menu>\n                  <MenuButton as={Button} icon={<FaUserCog />}>\n                    Admin\n                  </MenuButton>\n                  <MenuList>\n                    <Link to=\"/admin/categories\">\n                      <MenuItem>Set Categories</MenuItem>\n                    </Link>\n                    <Link to=\"/admin/productslist\">\n                      <MenuItem>Set Products</MenuItem>\n                    </Link>\n                  </MenuList>\n                </Menu>\n              )}\n            </Box>\n            <Link to=\"/\">\n              <Button\n                ml={5}\n                mr={3}\n                variant=\"link\"\n                colorScheme=\"yellow\"\n                onClick={handleLogout}\n              >\n                Logout\n              </Button>\n            </Link>\n          </HStack>\n        ) : (\n          <HStack>\n            <Link to=\"/orders\">\n              <Button variant=\"link\" colorScheme=\"yellow\" p={3}>\n                {user.userName}\n              </Button>\n            </Link>\n            <Link to=\"/cart\">\n              <IconButton\n                color=\"#0c0f0a\"\n                bg=\"#ffcd1f\"\n                variant=\"solid\"\n                icon={<AiOutlineShoppingCart />}\n              />\n            </Link>\n            <Link to=\"/\">\n              <Button\n                variant=\"solid\"\n                bg=\"#ffcd1f\"\n                color=\"#0c0f0a\"\n                onClick={handleLogout}\n              >\n                Logout\n              </Button>\n            </Link>\n          </HStack>\n        )\n      ) : (\n        <>\n          <Link to=\"/login\">\n            <Button variant=\"solid\" color=\"#0c0f0a\" bg=\"#ffcd1f\" mr={1}>\n              Login\n            </Button>\n          </Link>\n          <Link to=\"/register\">\n            <Button variant=\"solid\" mr={1} color=\"#0c0f0a\" bg=\"#ffcd1f\">\n              Sign Up\n            </Button>\n          </Link>\n          <Link to=\"/login\">\n            <IconButton\n              mr={1}\n              color=\"#0c0f0a\"\n              bg=\"#ffcd1f\"\n              variant=\"solid\"\n              icon={<AiOutlineShoppingCart />}\n            />\n          </Link>\n        </>\n      )}\n    </Flex>\n  );\n}\n","import { Stack} from \"@chakra-ui/react\";\nimport ButtonCategory from \"./ButtonCategory\"\nimport SearchInput from \"./SearchInput\"\nimport AccountButtons from \"./AccountButtons\"\n\n\n\nexport default function MobileNav() {\n  return (\n    <Stack bg={\"white\"} p={4} display={\"block\"}>\n      \n      <ButtonCategory />\n      <SearchInput movile={true} />\n      <AccountButtons mt={8}/>\n    </Stack>\n  );\n}\n ","import { Stack } from \"@chakra-ui/react\";\nimport AccountButtons from \"./AccountButtons\";\n\nexport default function DesktopNav() {\n  return (\n    <Stack direction={\"row\"} spacing={4}>\n      <AccountButtons />\n    </Stack>\n  );\n}\n","import {\n  Box,\n  Flex,\n  Text,\n  IconButton,\n  Collapse,\n  useColorModeValue,\n  useBreakpointValue,\n  useDisclosure,\n  Stack,\n} from \"@chakra-ui/react\";\n\nimport { HamburgerIcon, CloseIcon } from \"@chakra-ui/icons\";\nimport { Link } from \"react-router-dom\";\nimport React from \"react\";\nimport MobileNav from \"./MobileNav\";\nimport DesktopNav from \"./DesktopNav\";\nimport SearchInput from \"./SearchInput\";\nimport ButtonCategory from \"./ButtonCategory\";\n\nexport default function WithSubnavigation() {\n  const { isOpen, onToggle } = useDisclosure();\n\n  return (\n    <Box\n      bg={\"black\"}\n      w=\"full\"\n      px={{ base: 2, sm: 4 }}\n      py={4}\n      shadow=\"md\"\n      color=\"white\"\n    >\n      <Flex\n        bg={\"black\"}\n        color={\"white\"}\n        minH={\"60px\"}\n        py={{ base: 2 }}\n        px={{ base: 4 }}\n        align={\"center\"}\n      >\n        <Flex\n          flex={{ base: 1, md: \"auto\" }}\n          ml={{ base: -2 }}\n          display={{ base: \"flex\", md: \"none\" }}\n        >\n          <IconButton\n            onClick={onToggle}\n            icon={\n              isOpen ? <CloseIcon w={3} h={3} /> : <HamburgerIcon w={5} h={5} />\n            }\n            variant={\"ghost\"}\n            aria-label={\"Toggle Navigation\"}\n          />\n        </Flex>\n        <Flex flex={{ base: 1 }} justify={{ base: \"center\", md: \"start\" }}>\n          <Text\n            textAlign={useBreakpointValue({ base: \"center\", md: \"left\" })}\n            fontFamily={\"heading\"}\n            color={useColorModeValue(\"gray.800\", \"white\")}\n          >\n            <Link to=\"/\">\n              <Box fontSize=\"xl\" fontWeight=\"semi-bold\" ml=\"2\">\n                <Box overflow=\"auto\" float=\"left\" w=\"175px\" h=\"auto\">\n                  <img\n                    src=\"https://cdn.discordapp.com/attachments/911052852607193099/911053682928406588/devMusic_1.jpg\"\n                    alt=\"logo\"\n                  />\n                </Box>\n              </Box>\n            </Link>\n          </Text>\n          <Flex display={{ base: \"none\", md: \"flex\" }} ml={10} mt={1}>\n            <ButtonCategory />\n            <SearchInput />\n          </Flex>\n        </Flex>\n        <Flex display={{ base: \"none\", md: \"flex\" }} ml={10}>\n          <DesktopNav />\n        </Flex>\n\n        <Stack\n          flex={{ base: 1, md: 0 }}\n          justify={\"flex-end\"}\n          direction={\"row\"}\n          spacing={6}\n        ></Stack>\n      </Flex>\n\n      <Collapse in={isOpen} animateOpacity>\n        <MobileNav />\n      </Collapse>\n    </Box>\n  );\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport AddAdminUsers from \"./components/AddAdminUsers\";\nimport Addcategory from \"./components/AddCategory\";\nimport ListCategories from \"./components/ListCategories\";\nimport EditCategory from \"./components/EditCategory.jsx\";\nimport ProductsList from \"./components/ProductsList.jsx\";\nimport EditProductForm from \"./components/EditProductForm\";\nimport Banner from \"./components/Banner\";\nimport Footer from \"./components/Footer\";\nimport Checkout from \"./components/Checkout\";\nimport Orders from \"./components/Orders\";\nimport Home from \"./components/Home\";\nimport CategoryGrid from \"./components/CategoryGrid\";\nimport LoginForm from \"./components/LoginForm\";\nimport RegisterForm from \"./components/RegisterForm\";\nimport AddProductForm from \"./components/AddProductForm\";\nimport Cart from \"./components/Cart\";\nimport DevsPage from \"./components/DevsPage\";\nimport CardProduct from \"./components/CardProduct\";\nimport { setUser } from \"./state/userReducer\";\nimport { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport Search from \"./components/Search\";\nimport axios from \"axios\";\nimport NavbarRes from \"./view/Navbar/NavbarResponsive\";\n\nfunction App() {\n  const dispatch = useDispatch();\n  //Aca hago la persistencia.\n  useEffect(() => {\n    axios\n      .get(\"/api/auth/me\")\n      .then((res) => {\n        dispatch(setUser(res.data));\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  return (\n    <div>\n      <NavbarRes />\n      <div className=\"content\">\n        <Switch>\n          <Route exact path=\"/\">\n            <Banner />\n            <Home />\n          </Route>\n          <Route path=\"/login\">\n            <LoginForm />\n          </Route>\n          <Route exact path=\"/products/:id\">\n            <CardProduct />\n          </Route>\n          <Route path=\"/category/:category/:page\">\n            <CategoryGrid />\n          </Route>\n          <Route path=\"/register\">\n            <RegisterForm />\n          </Route>\n          <Route path=\"/cart\">\n            <Cart />\n          </Route>\n          <Route path=\"/orders\">\n            <Orders />\n          </Route>\n          <Route exact path=\"/admin\">\n            <AddProductForm />\n          </Route>\n          <Route path=\"/checkout\">\n            <Checkout />\n          </Route>\n          <Route path=\"/search/:name/:page\">\n            <Search />\n          </Route>\n          <Route path=\"/admin/users\">\n            <AddAdminUsers />\n          </Route>\n          <Route path=\"/admin/categories\">\n            <ListCategories />\n          </Route>\n          <Route exact path=\"/admin/category/:id\">\n            <EditCategory />\n          </Route>\n          <Route path=\"/admin/add/category\">\n            <Addcategory />\n          </Route>\n          <Route path=\"/admin/productslist\">\n            <ProductsList />\n          </Route>\n          <Route path=\"/devs-page\">\n            <DevsPage />\n          </Route>\n          <Route path=\"/admin/edit/:id\">\n            <EditProductForm />\n          </Route>\n          <Route path=\"/admin/users\">\n            <AddAdminUsers />\n          </Route>\n          <Route path=\"/admin/categories\">\n            <ListCategories />\n          </Route>\n          <Route path=\"/admin/category/:id\">\n            <EditCategory />\n          </Route>\n          <Route path=\"/admin/productslist\">\n            <ProductsList />\n          </Route>\n          <Route path=\"/admin/edit/:id\">\n            <EditProductForm />\n          </Route>\n        </Switch>\n      </div>\n      <div className=\"footer\">\n        <Footer />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport logger from \"redux-logger\";\nimport userReducer from \"./userReducer\";\nimport productsReducer from \"./productsReducer\";\n\nconst store = configureStore({\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(logger), // el logger es un middleware que usamos para ver cosas en consola\n  reducer: {\n    user: userReducer,\n    products: productsReducer,\n  },\n});\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { ChakraProvider } from \"@chakra-ui/react\"\nimport { BrowserRouter } from \"react-router-dom\";\nimport store from \"./state/store\";\nimport { Provider } from \"react-redux\";\n\nconst app=(\n    <BrowserRouter>\n    <ChakraProvider>\n    <Provider store={store}>\n      <App />\n    </Provider>\n    </ChakraProvider>\n    </BrowserRouter>\n)\n\nconst target = document.getElementById(\"root\")\n\n\nReactDOM.render(app,target );\n"],"sourceRoot":""}